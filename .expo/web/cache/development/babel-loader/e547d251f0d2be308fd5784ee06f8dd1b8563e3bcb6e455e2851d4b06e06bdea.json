{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useState as $8rdZD$useState, useRef as $8rdZD$useRef } from \"react\";\nfunction $b45bbbaf0c3785df$export$29efd034f1d79f81(props) {\n  var _getItems = props.getItems,\n    isDisabled = props.isDisabled,\n    collection = props.collection,\n    selectionManager = props.selectionManager,\n    onDragStart = props.onDragStart,\n    onDragMove = props.onDragMove,\n    onDragEnd = props.onDragEnd,\n    preview = props.preview,\n    getAllowedDropOperations = props.getAllowedDropOperations;\n  var _ref = (0, $8rdZD$useState)(false),\n    _ref2 = _slicedToArray(_ref, 2),\n    setDragging = _ref2[1];\n  var draggingKeys = (0, $8rdZD$useRef)(new Set());\n  var draggedKey = (0, $8rdZD$useRef)(null);\n  var getKeys = function getKeys(key) {\n    var keys = new Set(selectionManager.isSelected(key) ? new Set(_toConsumableArray(selectionManager.selectedKeys).filter(function (key) {\n      return !!collection.getItem(key);\n    })) : []);\n    keys.add(key);\n    return keys;\n  };\n  return {\n    collection: collection,\n    selectionManager: selectionManager,\n    get draggedKey() {\n      return draggedKey.current;\n    },\n    get draggingKeys() {\n      return draggingKeys.current;\n    },\n    isDragging: function isDragging(key) {\n      return draggingKeys.current.has(key);\n    },\n    getKeysForDrag: getKeys,\n    getItems: function getItems(key) {\n      return _getItems(getKeys(key));\n    },\n    isDisabled: isDisabled,\n    preview: preview,\n    getAllowedDropOperations: getAllowedDropOperations,\n    startDrag: function startDrag(key, event) {\n      var keys = getKeys(key);\n      draggingKeys.current = keys;\n      draggedKey.current = key;\n      selectionManager.setFocused(false);\n      setDragging(true);\n      if (typeof onDragStart === \"function\") onDragStart(_objectSpread(_objectSpread({}, event), {}, {\n        keys: keys\n      }));\n    },\n    moveDrag: function moveDrag(event) {\n      if (typeof onDragMove === \"function\") onDragMove(_objectSpread(_objectSpread({}, event), {}, {\n        keys: draggingKeys.current\n      }));\n    },\n    endDrag: function endDrag(event) {\n      var isInternal = event.isInternal;\n      if (typeof onDragEnd === \"function\") onDragEnd(_objectSpread(_objectSpread({}, event), {}, {\n        keys: draggingKeys.current,\n        isInternal: isInternal\n      }));\n      draggingKeys.current = new Set();\n      draggedKey.current = null;\n      setDragging(false);\n    }\n  };\n}\nexport { $b45bbbaf0c3785df$export$29efd034f1d79f81 as useDraggableCollectionState };","map":{"version":3,"names":["useState","$8rdZD$useState","useRef","$8rdZD$useRef","$b45bbbaf0c3785df$export$29efd034f1d79f81","props","getItems","isDisabled","collection","selectionManager","onDragStart","onDragMove","onDragEnd","preview","getAllowedDropOperations","_ref","_ref2","_slicedToArray","setDragging","draggingKeys","Set","draggedKey","getKeys","key","keys","isSelected","_toConsumableArray","selectedKeys","filter","getItem","add","current","isDragging","has","getKeysForDrag","startDrag","event","setFocused","_objectSpread","moveDrag","endDrag","isInternal","useDraggableCollectionState"],"sources":["D:/React Native/Expo+glustack/Music-App/node_modules/@react-stately/dnd/dist/useDraggableCollectionState.mjs"],"sourcesContent":["import {useState as $8rdZD$useState, useRef as $8rdZD$useRef} from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \nfunction $b45bbbaf0c3785df$export$29efd034f1d79f81(props) {\n    let { getItems: getItems, isDisabled: isDisabled, collection: collection, selectionManager: selectionManager, onDragStart: onDragStart, onDragMove: onDragMove, onDragEnd: onDragEnd, preview: preview, getAllowedDropOperations: getAllowedDropOperations } = props;\n    let [, setDragging] = (0, $8rdZD$useState)(false);\n    let draggingKeys = (0, $8rdZD$useRef)(new Set());\n    let draggedKey = (0, $8rdZD$useRef)(null);\n    let getKeys = (key)=>{\n        // The clicked item is always added to the drag. If it is selected, then all of the\n        // other selected items are also dragged. If it is not selected, the only the clicked\n        // item is dragged. This matches native macOS behavior.\n        let keys = new Set(selectionManager.isSelected(key) ? new Set([\n            ...selectionManager.selectedKeys\n        ].filter((key)=>!!collection.getItem(key))) : []);\n        keys.add(key);\n        return keys;\n    };\n    return {\n        collection: collection,\n        selectionManager: selectionManager,\n        get draggedKey () {\n            return draggedKey.current;\n        },\n        get draggingKeys () {\n            return draggingKeys.current;\n        },\n        isDragging (key) {\n            return draggingKeys.current.has(key);\n        },\n        getKeysForDrag: getKeys,\n        getItems (key) {\n            return getItems(getKeys(key));\n        },\n        isDisabled: isDisabled,\n        preview: preview,\n        getAllowedDropOperations: getAllowedDropOperations,\n        startDrag (key, event) {\n            let keys = getKeys(key);\n            draggingKeys.current = keys;\n            draggedKey.current = key;\n            selectionManager.setFocused(false);\n            setDragging(true);\n            if (typeof onDragStart === \"function\") onDragStart({\n                ...event,\n                keys: keys\n            });\n        },\n        moveDrag (event) {\n            if (typeof onDragMove === \"function\") onDragMove({\n                ...event,\n                keys: draggingKeys.current\n            });\n        },\n        endDrag (event) {\n            let { isInternal: isInternal } = event;\n            if (typeof onDragEnd === \"function\") onDragEnd({\n                ...event,\n                keys: draggingKeys.current,\n                isInternal: isInternal\n            });\n            draggingKeys.current = new Set();\n            draggedKey.current = null;\n            setDragging(false);\n        }\n    };\n}\n\n\nexport {$b45bbbaf0c3785df$export$29efd034f1d79f81 as useDraggableCollectionState};\n//# sourceMappingURL=useDraggableCollectionState.mjs.map\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Selection as $e40ea825a81a3709$export$52baac22726c72bf } from \"./Selection.mjs\";\nimport { useControlledState as $6tM1y$useControlledState } from \"@react-stately/utils\";\nimport { useRef as $6tM1y$useRef, useState as $6tM1y$useState, useMemo as $6tM1y$useMemo, useEffect as $6tM1y$useEffect } from \"react\";\nfunction $7af3f5b51489e0b5$var$equalSets(setA, setB) {\n  if (setA.size !== setB.size) return false;\n  for (var item of setA) {\n    if (!setB.has(item)) return false;\n  }\n  return true;\n}\nfunction $7af3f5b51489e0b5$export$253fe78d46329472(props) {\n  var _props$selectionMode = props.selectionMode,\n    selectionMode = _props$selectionMode === void 0 ? \"none\" : _props$selectionMode,\n    disallowEmptySelection = props.disallowEmptySelection,\n    allowDuplicateSelectionEvents = props.allowDuplicateSelectionEvents,\n    _props$selectionBehav = props.selectionBehavior,\n    selectionBehaviorProp = _props$selectionBehav === void 0 ? \"toggle\" : _props$selectionBehav,\n    _props$disabledBehavi = props.disabledBehavior,\n    disabledBehavior = _props$disabledBehavi === void 0 ? \"all\" : _props$disabledBehavi;\n  var isFocusedRef = (0, $6tM1y$useRef)(false);\n  var _ref = (0, $6tM1y$useState)(false),\n    _ref2 = _slicedToArray(_ref, 2),\n    _setFocused = _ref2[1];\n  var focusedKeyRef = (0, $6tM1y$useRef)(null);\n  var childFocusStrategyRef = (0, $6tM1y$useRef)(null);\n  var _ref3 = (0, $6tM1y$useState)(null),\n    _ref4 = _slicedToArray(_ref3, 2),\n    _setFocusedKey = _ref4[1];\n  var selectedKeysProp = (0, $6tM1y$useMemo)(function () {\n    return $7af3f5b51489e0b5$var$convertSelection(props.selectedKeys);\n  }, [props.selectedKeys]);\n  var defaultSelectedKeys = (0, $6tM1y$useMemo)(function () {\n    return $7af3f5b51489e0b5$var$convertSelection(props.defaultSelectedKeys, new (0, $e40ea825a81a3709$export$52baac22726c72bf)());\n  }, [props.defaultSelectedKeys]);\n  var _ref5 = (0, $6tM1y$useControlledState)(selectedKeysProp, defaultSelectedKeys, props.onSelectionChange),\n    _ref6 = _slicedToArray(_ref5, 2),\n    selectedKeys = _ref6[0],\n    _setSelectedKeys = _ref6[1];\n  var disabledKeysProp = (0, $6tM1y$useMemo)(function () {\n    return props.disabledKeys ? new Set(props.disabledKeys) : new Set();\n  }, [props.disabledKeys]);\n  var _ref7 = (0, $6tM1y$useState)(selectionBehaviorProp),\n    _ref8 = _slicedToArray(_ref7, 2),\n    selectionBehavior = _ref8[0],\n    setSelectionBehavior = _ref8[1];\n  if (selectionBehaviorProp === \"replace\" && selectionBehavior === \"toggle\" && typeof selectedKeys === \"object\" && selectedKeys.size === 0) setSelectionBehavior(\"replace\");\n  var lastSelectionBehavior = (0, $6tM1y$useRef)(selectionBehaviorProp);\n  (0, $6tM1y$useEffect)(function () {\n    if (selectionBehaviorProp !== lastSelectionBehavior.current) {\n      setSelectionBehavior(selectionBehaviorProp);\n      lastSelectionBehavior.current = selectionBehaviorProp;\n    }\n  }, [selectionBehaviorProp]);\n  return {\n    selectionMode: selectionMode,\n    disallowEmptySelection: disallowEmptySelection,\n    selectionBehavior: selectionBehavior,\n    setSelectionBehavior: setSelectionBehavior,\n    get isFocused() {\n      return isFocusedRef.current;\n    },\n    setFocused: function setFocused(f) {\n      isFocusedRef.current = f;\n      _setFocused(f);\n    },\n    get focusedKey() {\n      return focusedKeyRef.current;\n    },\n    get childFocusStrategy() {\n      return childFocusStrategyRef.current;\n    },\n    setFocusedKey: function setFocusedKey(k) {\n      var childFocusStrategy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"first\";\n      focusedKeyRef.current = k;\n      childFocusStrategyRef.current = childFocusStrategy;\n      _setFocusedKey(k);\n    },\n    selectedKeys: selectedKeys,\n    setSelectedKeys: function setSelectedKeys(keys) {\n      if (allowDuplicateSelectionEvents || !$7af3f5b51489e0b5$var$equalSets(keys, selectedKeys)) _setSelectedKeys(keys);\n    },\n    disabledKeys: disabledKeysProp,\n    disabledBehavior: disabledBehavior\n  };\n}\nfunction $7af3f5b51489e0b5$var$convertSelection(selection, defaultValue) {\n  if (!selection) return defaultValue;\n  return selection === \"all\" ? \"all\" : new (0, $e40ea825a81a3709$export$52baac22726c72bf)(selection);\n}\nexport { $7af3f5b51489e0b5$export$253fe78d46329472 as useMultipleSelectionState };","map":{"version":3,"names":["Selection","$e40ea825a81a3709$export$52baac22726c72bf","useControlledState","$6tM1y$useControlledState","useRef","$6tM1y$useRef","useState","$6tM1y$useState","useMemo","$6tM1y$useMemo","useEffect","$6tM1y$useEffect","$7af3f5b51489e0b5$var$equalSets","setA","setB","size","item","has","$7af3f5b51489e0b5$export$253fe78d46329472","props","_props$selectionMode","selectionMode","disallowEmptySelection","allowDuplicateSelectionEvents","_props$selectionBehav","selectionBehavior","selectionBehaviorProp","_props$disabledBehavi","disabledBehavior","isFocusedRef","_ref","_ref2","_slicedToArray","setFocused","focusedKeyRef","childFocusStrategyRef","_ref3","_ref4","setFocusedKey","selectedKeysProp","$7af3f5b51489e0b5$var$convertSelection","selectedKeys","defaultSelectedKeys","_ref5","onSelectionChange","_ref6","setSelectedKeys","disabledKeysProp","disabledKeys","Set","_ref7","_ref8","setSelectionBehavior","lastSelectionBehavior","current","isFocused","f","focusedKey","childFocusStrategy","k","arguments","length","undefined","keys","selection","defaultValue","useMultipleSelectionState"],"sources":["D:/React Native/Expo+glustack/Music-App/node_modules/@react-stately/selection/dist/useMultipleSelectionState.mjs"],"sourcesContent":["import {Selection as $e40ea825a81a3709$export$52baac22726c72bf} from \"./Selection.mjs\";\nimport {useControlledState as $6tM1y$useControlledState} from \"@react-stately/utils\";\nimport {useRef as $6tM1y$useRef, useState as $6tM1y$useState, useMemo as $6tM1y$useMemo, useEffect as $6tM1y$useEffect} from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\n\nfunction $7af3f5b51489e0b5$var$equalSets(setA, setB) {\n    if (setA.size !== setB.size) return false;\n    for (let item of setA){\n        if (!setB.has(item)) return false;\n    }\n    return true;\n}\nfunction $7af3f5b51489e0b5$export$253fe78d46329472(props) {\n    let { selectionMode: selectionMode = \"none\", disallowEmptySelection: disallowEmptySelection, allowDuplicateSelectionEvents: allowDuplicateSelectionEvents, selectionBehavior: selectionBehaviorProp = \"toggle\", disabledBehavior: disabledBehavior = \"all\" } = props;\n    // We want synchronous updates to `isFocused` and `focusedKey` after their setters are called.\n    // But we also need to trigger a react re-render. So, we have both a ref (sync) and state (async).\n    let isFocusedRef = (0, $6tM1y$useRef)(false);\n    let [, setFocused] = (0, $6tM1y$useState)(false);\n    let focusedKeyRef = (0, $6tM1y$useRef)(null);\n    let childFocusStrategyRef = (0, $6tM1y$useRef)(null);\n    let [, setFocusedKey] = (0, $6tM1y$useState)(null);\n    let selectedKeysProp = (0, $6tM1y$useMemo)(()=>$7af3f5b51489e0b5$var$convertSelection(props.selectedKeys), [\n        props.selectedKeys\n    ]);\n    let defaultSelectedKeys = (0, $6tM1y$useMemo)(()=>$7af3f5b51489e0b5$var$convertSelection(props.defaultSelectedKeys, new (0, $e40ea825a81a3709$export$52baac22726c72bf)()), [\n        props.defaultSelectedKeys\n    ]);\n    let [selectedKeys, setSelectedKeys] = (0, $6tM1y$useControlledState)(selectedKeysProp, defaultSelectedKeys, props.onSelectionChange);\n    let disabledKeysProp = (0, $6tM1y$useMemo)(()=>props.disabledKeys ? new Set(props.disabledKeys) : new Set(), [\n        props.disabledKeys\n    ]);\n    let [selectionBehavior, setSelectionBehavior] = (0, $6tM1y$useState)(selectionBehaviorProp);\n    // If the selectionBehavior prop is set to replace, but the current state is toggle (e.g. due to long press\n    // to enter selection mode on touch), and the selection becomes empty, reset the selection behavior.\n    if (selectionBehaviorProp === \"replace\" && selectionBehavior === \"toggle\" && typeof selectedKeys === \"object\" && selectedKeys.size === 0) setSelectionBehavior(\"replace\");\n    // If the selectionBehavior prop changes, update the state as well.\n    let lastSelectionBehavior = (0, $6tM1y$useRef)(selectionBehaviorProp);\n    (0, $6tM1y$useEffect)(()=>{\n        if (selectionBehaviorProp !== lastSelectionBehavior.current) {\n            setSelectionBehavior(selectionBehaviorProp);\n            lastSelectionBehavior.current = selectionBehaviorProp;\n        }\n    }, [\n        selectionBehaviorProp\n    ]);\n    return {\n        selectionMode: selectionMode,\n        disallowEmptySelection: disallowEmptySelection,\n        selectionBehavior: selectionBehavior,\n        setSelectionBehavior: setSelectionBehavior,\n        get isFocused () {\n            return isFocusedRef.current;\n        },\n        setFocused (f) {\n            isFocusedRef.current = f;\n            setFocused(f);\n        },\n        get focusedKey () {\n            return focusedKeyRef.current;\n        },\n        get childFocusStrategy () {\n            return childFocusStrategyRef.current;\n        },\n        setFocusedKey (k, childFocusStrategy = \"first\") {\n            focusedKeyRef.current = k;\n            childFocusStrategyRef.current = childFocusStrategy;\n            setFocusedKey(k);\n        },\n        selectedKeys: selectedKeys,\n        setSelectedKeys (keys) {\n            if (allowDuplicateSelectionEvents || !$7af3f5b51489e0b5$var$equalSets(keys, selectedKeys)) setSelectedKeys(keys);\n        },\n        disabledKeys: disabledKeysProp,\n        disabledBehavior: disabledBehavior\n    };\n}\nfunction $7af3f5b51489e0b5$var$convertSelection(selection, defaultValue) {\n    if (!selection) return defaultValue;\n    return selection === \"all\" ? \"all\" : new (0, $e40ea825a81a3709$export$52baac22726c72bf)(selection);\n}\n\n\nexport {$7af3f5b51489e0b5$export$253fe78d46329472 as useMultipleSelectionState};\n//# sourceMappingURL=useMultipleSelectionState.mjs.map\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
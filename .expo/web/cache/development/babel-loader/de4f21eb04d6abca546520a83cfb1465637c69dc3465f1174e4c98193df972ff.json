{"ast":null,"code":"function $6818b1c4fc67028d$export$1994a077b98ee0d5(width) {\n  return width != null && (!isNaN(width) || String(width).match(/^(\\d+)(?=%$)/) !== null);\n}\nfunction $6818b1c4fc67028d$export$9078bad4c3934604(width) {\n  if (!width) return 1;\n  var match = width.match(/^(.+)(?=fr$)/);\n  if (!match) {\n    console.warn(`width: ${width} is not a supported format, width should be a number (ex. 150), percentage (ex. '50%') or fr unit (ex. '2fr')`, \"defaulting to '1fr'\");\n    return 1;\n  }\n  return parseFloat(match[0]);\n}\nfunction $6818b1c4fc67028d$export$7bbad27896f7ae9f(width, tableWidth) {\n  if (typeof width === \"string\") {\n    var match = width.match(/^(\\d+)(?=%$)/);\n    if (!match) throw new Error(\"Only percentages or numbers are supported for static column widths\");\n    return tableWidth * (parseFloat(match[0]) / 100);\n  }\n  return width;\n}\nfunction $6818b1c4fc67028d$export$59185c62a7544aa0(maxWidth, tableWidth) {\n  return maxWidth != null ? $6818b1c4fc67028d$export$7bbad27896f7ae9f(maxWidth, tableWidth) : Number.MAX_SAFE_INTEGER;\n}\nfunction $6818b1c4fc67028d$export$f556054ce4358701(minWidth, tableWidth) {\n  return minWidth != null ? $6818b1c4fc67028d$export$7bbad27896f7ae9f(minWidth, tableWidth) : 0;\n}\nfunction $6818b1c4fc67028d$export$55d50dc687385491(availableWidth, columns, changedColumns, getDefaultWidth, getDefaultMinWidth) {\n  var hasNonFrozenItems = false;\n  var flexItems = columns.map(function (column, index) {\n    var _column_width, _ref, _ref1;\n    var width = changedColumns.get(column.key) != null ? changedColumns.get(column.key) : (_ref1 = (_ref = (_column_width = column.width) !== null && _column_width !== void 0 ? _column_width : column.defaultWidth) !== null && _ref !== void 0 ? _ref : getDefaultWidth === null || getDefaultWidth === void 0 ? void 0 : getDefaultWidth(index)) !== null && _ref1 !== void 0 ? _ref1 : \"1fr\";\n    var frozen = false;\n    var baseSize = 0;\n    var flex = 0;\n    var targetMainSize = null;\n    if ($6818b1c4fc67028d$export$1994a077b98ee0d5(width)) {\n      baseSize = $6818b1c4fc67028d$export$7bbad27896f7ae9f(width, availableWidth);\n      frozen = true;\n    } else {\n      flex = $6818b1c4fc67028d$export$9078bad4c3934604(width);\n      if (flex <= 0) frozen = true;\n    }\n    var _column_minWidth, _ref2;\n    var min = $6818b1c4fc67028d$export$f556054ce4358701((_ref2 = (_column_minWidth = column.minWidth) !== null && _column_minWidth !== void 0 ? _column_minWidth : getDefaultMinWidth === null || getDefaultMinWidth === void 0 ? void 0 : getDefaultMinWidth(index)) !== null && _ref2 !== void 0 ? _ref2 : 0, availableWidth);\n    var max = $6818b1c4fc67028d$export$59185c62a7544aa0(column.maxWidth, availableWidth);\n    var hypotheticalMainSize = Math.max(min, Math.min(baseSize, max));\n    if (frozen) targetMainSize = hypotheticalMainSize;else if (baseSize > hypotheticalMainSize) {\n      frozen = true;\n      targetMainSize = hypotheticalMainSize;\n    }\n    if (!frozen) hasNonFrozenItems = true;\n    return {\n      frozen: frozen,\n      baseSize: baseSize,\n      hypotheticalMainSize: hypotheticalMainSize,\n      min: min,\n      max: max,\n      flex: flex,\n      targetMainSize: targetMainSize,\n      violation: 0\n    };\n  });\n  var _loop = function _loop() {\n    var usedWidth = 0;\n    var flexFactors = 0;\n    flexItems.forEach(function (item) {\n      if (item.frozen) usedWidth += item.targetMainSize;else {\n        usedWidth += item.baseSize;\n        flexFactors += item.flex;\n      }\n    });\n    var remainingFreeSpace = availableWidth - usedWidth;\n    if (remainingFreeSpace > 0) flexItems.forEach(function (item) {\n      if (!item.frozen) {\n        var ratio = item.flex / flexFactors;\n        item.targetMainSize = item.baseSize + ratio * remainingFreeSpace;\n      }\n    });\n    var totalViolation = 0;\n    flexItems.forEach(function (item) {\n      item.violation = 0;\n      if (!item.frozen) {\n        var min = item.min,\n          max = item.max,\n          targetMainSize = item.targetMainSize;\n        item.targetMainSize = Math.max(min, Math.min(targetMainSize, max));\n        item.violation = item.targetMainSize - targetMainSize;\n        totalViolation += item.violation;\n      }\n    });\n    hasNonFrozenItems = false;\n    flexItems.forEach(function (item) {\n      if (totalViolation === 0 || Math.sign(totalViolation) === Math.sign(item.violation)) item.frozen = true;else if (!item.frozen) hasNonFrozenItems = true;\n    });\n  };\n  while (hasNonFrozenItems) {\n    _loop();\n  }\n  return $6818b1c4fc67028d$var$cascadeRounding(flexItems);\n}\nfunction $6818b1c4fc67028d$var$cascadeRounding(flexItems) {\n  var fpTotal = 0;\n  var intTotal = 0;\n  var roundedArray = [];\n  flexItems.forEach(function (item) {\n    var float = item.targetMainSize;\n    var integer = Math.round(float + fpTotal) - intTotal;\n    fpTotal += float;\n    intTotal += integer;\n    roundedArray.push(integer);\n  });\n  return roundedArray;\n}\nexport { $6818b1c4fc67028d$export$1994a077b98ee0d5 as isStatic, $6818b1c4fc67028d$export$9078bad4c3934604 as parseFractionalUnit, $6818b1c4fc67028d$export$7bbad27896f7ae9f as parseStaticWidth, $6818b1c4fc67028d$export$59185c62a7544aa0 as getMaxWidth, $6818b1c4fc67028d$export$f556054ce4358701 as getMinWidth, $6818b1c4fc67028d$export$55d50dc687385491 as calculateColumnSizes };","map":{"version":3,"names":["$6818b1c4fc67028d$export$1994a077b98ee0d5","width","isNaN","String","match","$6818b1c4fc67028d$export$9078bad4c3934604","console","warn","parseFloat","$6818b1c4fc67028d$export$7bbad27896f7ae9f","tableWidth","Error","$6818b1c4fc67028d$export$59185c62a7544aa0","maxWidth","Number","MAX_SAFE_INTEGER","$6818b1c4fc67028d$export$f556054ce4358701","minWidth","$6818b1c4fc67028d$export$55d50dc687385491","availableWidth","columns","changedColumns","getDefaultWidth","getDefaultMinWidth","hasNonFrozenItems","flexItems","map","column","index","_column_width","_ref","_ref1","get","key","defaultWidth","frozen","baseSize","flex","targetMainSize","_column_minWidth","_ref2","min","max","hypotheticalMainSize","Math","violation","_loop","usedWidth","flexFactors","forEach","item","remainingFreeSpace","ratio","totalViolation","sign","$6818b1c4fc67028d$var$cascadeRounding","fpTotal","intTotal","roundedArray","float","integer","round","push","isStatic","parseFractionalUnit","parseStaticWidth","getMaxWidth","getMinWidth","calculateColumnSizes"],"sources":["D:/React Native/Expo+glustack/Music-App/node_modules/@react-stately/table/dist/TableUtils.mjs"],"sourcesContent":["/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ function $6818b1c4fc67028d$export$1994a077b98ee0d5(width) {\n    return width != null && (!isNaN(width) || String(width).match(/^(\\d+)(?=%$)/) !== null);\n}\nfunction $6818b1c4fc67028d$export$9078bad4c3934604(width) {\n    if (!width) return 1;\n    let match = width.match(/^(.+)(?=fr$)/);\n    // if width is the incorrect format, just default it to a 1fr\n    if (!match) {\n        console.warn(`width: ${width} is not a supported format, width should be a number (ex. 150), percentage (ex. '50%') or fr unit (ex. '2fr')`, \"defaulting to '1fr'\");\n        return 1;\n    }\n    return parseFloat(match[0]);\n}\nfunction $6818b1c4fc67028d$export$7bbad27896f7ae9f(width, tableWidth) {\n    if (typeof width === \"string\") {\n        let match = width.match(/^(\\d+)(?=%$)/);\n        if (!match) throw new Error(\"Only percentages or numbers are supported for static column widths\");\n        return tableWidth * (parseFloat(match[0]) / 100);\n    }\n    return width;\n}\nfunction $6818b1c4fc67028d$export$59185c62a7544aa0(maxWidth, tableWidth) {\n    return maxWidth != null ? $6818b1c4fc67028d$export$7bbad27896f7ae9f(maxWidth, tableWidth) : Number.MAX_SAFE_INTEGER;\n}\nfunction $6818b1c4fc67028d$export$f556054ce4358701(minWidth, tableWidth) {\n    return minWidth != null ? $6818b1c4fc67028d$export$7bbad27896f7ae9f(minWidth, tableWidth) : 0;\n}\nfunction $6818b1c4fc67028d$export$55d50dc687385491(availableWidth, columns, changedColumns, getDefaultWidth, getDefaultMinWidth) {\n    let hasNonFrozenItems = false;\n    let flexItems = columns.map((column, index)=>{\n        var _column_width, _ref, _ref1;\n        let width = changedColumns.get(column.key) != null ? changedColumns.get(column.key) : (_ref1 = (_ref = (_column_width = column.width) !== null && _column_width !== void 0 ? _column_width : column.defaultWidth) !== null && _ref !== void 0 ? _ref : getDefaultWidth === null || getDefaultWidth === void 0 ? void 0 : getDefaultWidth(index)) !== null && _ref1 !== void 0 ? _ref1 : \"1fr\";\n        let frozen = false;\n        let baseSize = 0;\n        let flex = 0;\n        let targetMainSize = null;\n        if ($6818b1c4fc67028d$export$1994a077b98ee0d5(width)) {\n            baseSize = $6818b1c4fc67028d$export$7bbad27896f7ae9f(width, availableWidth);\n            frozen = true;\n        } else {\n            flex = $6818b1c4fc67028d$export$9078bad4c3934604(width);\n            if (flex <= 0) frozen = true;\n        }\n        var _column_minWidth, _ref2;\n        let min = $6818b1c4fc67028d$export$f556054ce4358701((_ref2 = (_column_minWidth = column.minWidth) !== null && _column_minWidth !== void 0 ? _column_minWidth : getDefaultMinWidth === null || getDefaultMinWidth === void 0 ? void 0 : getDefaultMinWidth(index)) !== null && _ref2 !== void 0 ? _ref2 : 0, availableWidth);\n        let max = $6818b1c4fc67028d$export$59185c62a7544aa0(column.maxWidth, availableWidth);\n        let hypotheticalMainSize = Math.max(min, Math.min(baseSize, max));\n        // 9.7.1\n        // We don't make use of flex basis, it's always 0, so we are always in 'grow' mode.\n        // 9.7.2\n        if (frozen) targetMainSize = hypotheticalMainSize;\n        else if (baseSize > hypotheticalMainSize) {\n            frozen = true;\n            targetMainSize = hypotheticalMainSize;\n        }\n        // 9.7.3\n        if (!frozen) hasNonFrozenItems = true;\n        return {\n            frozen: frozen,\n            baseSize: baseSize,\n            hypotheticalMainSize: hypotheticalMainSize,\n            min: min,\n            max: max,\n            flex: flex,\n            targetMainSize: targetMainSize,\n            violation: 0\n        };\n    });\n    // 9.7.4\n    // 9.7.4.a\n    while(hasNonFrozenItems){\n        // 9.7.4.b\n        /**\n     * Calculate the remaining free space as for initial free space,\n     * above (9.7.3). If the sum of the unfrozen flex items’ flex factors is\n     * less than one, multiply the initial free space by this sum (of flex factors).\n     * If the magnitude of this value is less than the magnitude of\n     * the remaining free space, use this as the remaining free space.\n     */ let usedWidth = 0;\n        let flexFactors = 0;\n        flexItems.forEach((item)=>{\n            if (item.frozen) usedWidth += item.targetMainSize;\n            else {\n                usedWidth += item.baseSize;\n                flexFactors += item.flex;\n            }\n        });\n        let remainingFreeSpace = availableWidth - usedWidth;\n        // we only support integer FR's, and because of hasNonFrozenItems, we know that flexFactors > 0\n        // so no need to check for flexFactors < 1\n        // 9.7.4.c\n        /**\n     * If the remaining free space is zero\n     * - Do nothing.\n     * Else // remember, we're always in grow mode\n     * - Find the ratio of the item’s flex grow factor to the\n     * sum of the flex grow factors of all unfrozen items on\n     * the line. Set the item’s target main size to its flex\n     * base size plus a fraction of the remaining free space\n     * proportional to the ratio.\n     */ if (remainingFreeSpace > 0) flexItems.forEach((item)=>{\n            if (!item.frozen) {\n                let ratio = item.flex / flexFactors;\n                item.targetMainSize = item.baseSize + ratio * remainingFreeSpace;\n            }\n        });\n        // 9.7.4.d\n        /**\n     * Fix min/max violations. Clamp each non-frozen item’s\n     * target main size by its used min and max main sizes\n     * and floor its content-box size at zero. If the item’s\n     * target main size was made smaller by this, it’s a max\n     * violation. If the item’s target main size was made\n     * larger by this, it’s a min violation.\n     */ let totalViolation = 0;\n        flexItems.forEach((item)=>{\n            item.violation = 0;\n            if (!item.frozen) {\n                let { min: min, max: max, targetMainSize: targetMainSize } = item;\n                item.targetMainSize = Math.max(min, Math.min(targetMainSize, max));\n                item.violation = item.targetMainSize - targetMainSize;\n                totalViolation += item.violation;\n            }\n        });\n        // 9.7.4.e\n        /**\n     * Freeze over-flexed items. The total violation is the\n     * sum of the adjustments from the previous step\n     * ∑(clamped size - unclamped size). If the total violation is:\n     * Zero\n     * - Freeze all items.\n     *\n     * Positive\n     * - Freeze all the items with min violations.\n     *\n     * Negative\n     * - Freeze all the items with max violations.\n     */ hasNonFrozenItems = false;\n        flexItems.forEach((item)=>{\n            if (totalViolation === 0 || Math.sign(totalViolation) === Math.sign(item.violation)) item.frozen = true;\n            else if (!item.frozen) hasNonFrozenItems = true;\n        });\n    }\n    return $6818b1c4fc67028d$var$cascadeRounding(flexItems);\n}\nfunction $6818b1c4fc67028d$var$cascadeRounding(flexItems) {\n    /*\n  Given an array of floats that sum to an integer, this rounds the floats\n  and returns an array of integers with the same sum.\n  */ let fpTotal = 0;\n    let intTotal = 0;\n    let roundedArray = [];\n    flexItems.forEach(function(item) {\n        let float = item.targetMainSize;\n        let integer = Math.round(float + fpTotal) - intTotal;\n        fpTotal += float;\n        intTotal += integer;\n        roundedArray.push(integer);\n    });\n    return roundedArray;\n}\n\n\nexport {$6818b1c4fc67028d$export$1994a077b98ee0d5 as isStatic, $6818b1c4fc67028d$export$9078bad4c3934604 as parseFractionalUnit, $6818b1c4fc67028d$export$7bbad27896f7ae9f as parseStaticWidth, $6818b1c4fc67028d$export$59185c62a7544aa0 as getMaxWidth, $6818b1c4fc67028d$export$f556054ce4358701 as getMinWidth, $6818b1c4fc67028d$export$55d50dc687385491 as calculateColumnSizes};\n//# sourceMappingURL=TableUtils.mjs.map\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
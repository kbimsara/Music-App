{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useControlledState as $d8rik$useControlledState } from \"@react-stately/utils\";\nfunction $3017fa7ffdddec74$export$8042c6c013fd5226() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var isReadOnly = props.isReadOnly;\n  var _ref = (0, $d8rik$useControlledState)(props.isSelected, props.defaultSelected || false, props.onChange),\n    _ref2 = _slicedToArray(_ref, 2),\n    isSelected = _ref2[0],\n    setSelected = _ref2[1];\n  function updateSelected(value) {\n    if (!isReadOnly) setSelected(value);\n  }\n  function toggleState() {\n    if (!isReadOnly) setSelected(!isSelected);\n  }\n  return {\n    isSelected: isSelected,\n    setSelected: updateSelected,\n    toggle: toggleState\n  };\n}\nexport { $3017fa7ffdddec74$export$8042c6c013fd5226 as useToggleState };","map":{"version":3,"names":["useControlledState","$d8rik$useControlledState","$3017fa7ffdddec74$export$8042c6c013fd5226","props","arguments","length","undefined","isReadOnly","_ref","isSelected","defaultSelected","onChange","_ref2","_slicedToArray","setSelected","updateSelected","value","toggleState","toggle","useToggleState"],"sources":["D:/React Native/Expo+glustack/Music-App/node_modules/@react-stately/toggle/dist/useToggleState.mjs"],"sourcesContent":["import {useControlledState as $d8rik$useControlledState} from \"@react-stately/utils\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \nfunction $3017fa7ffdddec74$export$8042c6c013fd5226(props = {}) {\n    let { isReadOnly: isReadOnly } = props;\n    // have to provide an empty function so useControlledState doesn't throw a fit\n    // can't use useControlledState's prop calling because we need the event object from the change\n    let [isSelected, setSelected] = (0, $d8rik$useControlledState)(props.isSelected, props.defaultSelected || false, props.onChange);\n    function updateSelected(value) {\n        if (!isReadOnly) setSelected(value);\n    }\n    function toggleState() {\n        if (!isReadOnly) setSelected(!isSelected);\n    }\n    return {\n        isSelected: isSelected,\n        setSelected: updateSelected,\n        toggle: toggleState\n    };\n}\n\n\nexport {$3017fa7ffdddec74$export$8042c6c013fd5226 as useToggleState};\n//# sourceMappingURL=useToggleState.mjs.map\n"],"mappings":";AAAA,SAAQA,kBAAkB,IAAIC,yBAAyB,QAAO,sBAAsB;AAapF,SAASC,yCAAyCA,CAAA,EAAa;EAAA,IAAZC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACzD,IAAkBG,UAAU,GAAKJ,KAAK,CAAhCI,UAAU;EAGhB,IAAAC,IAAA,GAAgC,CAAC,CAAC,EAAEP,yBAAyB,EAAEE,KAAK,CAACM,UAAU,EAAEN,KAAK,CAACO,eAAe,IAAI,KAAK,EAAEP,KAAK,CAACQ,QAAQ,CAAC;IAAAC,KAAA,GAAAC,cAAA,CAAAL,IAAA;IAA3HC,UAAU,GAAAG,KAAA;IAAEE,WAAW,GAAAF,KAAA;EAC5B,SAASG,cAAcA,CAACC,KAAK,EAAE;IAC3B,IAAI,CAACT,UAAU,EAAEO,WAAW,CAACE,KAAK,CAAC;EACvC;EACA,SAASC,WAAWA,CAAA,EAAG;IACnB,IAAI,CAACV,UAAU,EAAEO,WAAW,CAAC,CAACL,UAAU,CAAC;EAC7C;EACA,OAAO;IACHA,UAAU,EAAEA,UAAU;IACtBK,WAAW,EAAEC,cAAc;IAC3BG,MAAM,EAAED;EACZ,CAAC;AACL;AAGA,SAAQf,yCAAyC,IAAIiB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
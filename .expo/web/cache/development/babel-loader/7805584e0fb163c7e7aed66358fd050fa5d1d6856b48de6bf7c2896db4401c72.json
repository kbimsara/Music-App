{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"register\"],\n  _excluded2 = [\"onPress\", \"onPressChange\", \"onPressStart\", \"onPressEnd\", \"onPressUp\", \"isDisabled\", \"isPressed\", \"preventFocusOnPress\", \"shouldCancelOnPointerExit\", \"allowTextSelectionOnPress\", \"ref\"];\nimport { disableTextSelection as $14c0b72509d70225$export$16a4697467175487, restoreTextSelection as $14c0b72509d70225$export$b0d6fa1ab32e3295 } from \"./textSelection.mjs\";\nimport { PressResponderContext as $ae1eeba8b9eafd08$export$5165eccb35aaadb5 } from \"./context.mjs\";\nimport { _ as $7mdmh$_ } from \"@swc/helpers/_/_class_private_field_get\";\nimport { _ as $7mdmh$_1 } from \"@swc/helpers/_/_class_private_field_init\";\nimport { _ as $7mdmh$_2 } from \"@swc/helpers/_/_class_private_field_set\";\nimport { mergeProps as $7mdmh$mergeProps, useSyncRef as $7mdmh$useSyncRef, useGlobalListeners as $7mdmh$useGlobalListeners, useEffectEvent as $7mdmh$useEffectEvent, getOwnerDocument as $7mdmh$getOwnerDocument, chain as $7mdmh$chain, isMac as $7mdmh$isMac, openLink as $7mdmh$openLink, isVirtualClick as $7mdmh$isVirtualClick, focusWithoutScrolling as $7mdmh$focusWithoutScrolling, isVirtualPointerEvent as $7mdmh$isVirtualPointerEvent, getOwnerWindow as $7mdmh$getOwnerWindow } from \"@react-aria/utils\";\nimport { useContext as $7mdmh$useContext, useState as $7mdmh$useState, useRef as $7mdmh$useRef, useMemo as $7mdmh$useMemo, useEffect as $7mdmh$useEffect } from \"react\";\nfunction $f6c31cce2adf654f$var$usePressResponderContext(props) {\n  var context = (0, $7mdmh$useContext)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5));\n  if (context) {\n    var register = context.register,\n      contextProps = _objectWithoutProperties(context, _excluded);\n    props = (0, $7mdmh$mergeProps)(contextProps, props);\n    register();\n  }\n  (0, $7mdmh$useSyncRef)(context, props.ref);\n  return props;\n}\nvar $f6c31cce2adf654f$var$_shouldStopPropagation = new WeakMap();\nvar $f6c31cce2adf654f$var$PressEvent = function () {\n  function $f6c31cce2adf654f$var$PressEvent(type, pointerType, originalEvent) {\n    _classCallCheck(this, $f6c31cce2adf654f$var$PressEvent);\n    (0, $7mdmh$_1)(this, $f6c31cce2adf654f$var$_shouldStopPropagation, {\n      writable: true,\n      value: void 0\n    });\n    (0, $7mdmh$_2)(this, $f6c31cce2adf654f$var$_shouldStopPropagation, true);\n    this.type = type;\n    this.pointerType = pointerType;\n    this.target = originalEvent.currentTarget;\n    this.shiftKey = originalEvent.shiftKey;\n    this.metaKey = originalEvent.metaKey;\n    this.ctrlKey = originalEvent.ctrlKey;\n    this.altKey = originalEvent.altKey;\n  }\n  return _createClass($f6c31cce2adf654f$var$PressEvent, [{\n    key: \"continuePropagation\",\n    value: function continuePropagation() {\n      (0, $7mdmh$_2)(this, $f6c31cce2adf654f$var$_shouldStopPropagation, false);\n    }\n  }, {\n    key: \"shouldStopPropagation\",\n    get: function get() {\n      return (0, $7mdmh$_)(this, $f6c31cce2adf654f$var$_shouldStopPropagation);\n    }\n  }]);\n}();\nvar $f6c31cce2adf654f$var$LINK_CLICKED = Symbol(\"linkClicked\");\nfunction $f6c31cce2adf654f$export$45712eceda6fad21(props) {\n  var _$f6c31cce2adf654f$va = $f6c31cce2adf654f$var$usePressResponderContext(props),\n    onPress = _$f6c31cce2adf654f$va.onPress,\n    onPressChange = _$f6c31cce2adf654f$va.onPressChange,\n    onPressStart = _$f6c31cce2adf654f$va.onPressStart,\n    onPressEnd = _$f6c31cce2adf654f$va.onPressEnd,\n    onPressUp = _$f6c31cce2adf654f$va.onPressUp,\n    isDisabled = _$f6c31cce2adf654f$va.isDisabled,\n    isPressedProp = _$f6c31cce2adf654f$va.isPressed,\n    preventFocusOnPress = _$f6c31cce2adf654f$va.preventFocusOnPress,\n    shouldCancelOnPointerExit = _$f6c31cce2adf654f$va.shouldCancelOnPointerExit,\n    allowTextSelectionOnPress = _$f6c31cce2adf654f$va.allowTextSelectionOnPress,\n    _ = _$f6c31cce2adf654f$va.ref,\n    domProps = _objectWithoutProperties(_$f6c31cce2adf654f$va, _excluded2);\n  var _ref = (0, $7mdmh$useState)(false),\n    _ref2 = _slicedToArray(_ref, 2),\n    isPressed = _ref2[0],\n    setPressed = _ref2[1];\n  var ref = (0, $7mdmh$useRef)({\n    isPressed: false,\n    ignoreEmulatedMouseEvents: false,\n    ignoreClickAfterPress: false,\n    didFirePressStart: false,\n    isTriggeringEvent: false,\n    activePointerId: null,\n    target: null,\n    isOverTarget: false,\n    pointerType: null\n  });\n  var _ref3 = (0, $7mdmh$useGlobalListeners)(),\n    addGlobalListener = _ref3.addGlobalListener,\n    removeAllGlobalListeners = _ref3.removeAllGlobalListeners;\n  var triggerPressStart = (0, $7mdmh$useEffectEvent)(function (originalEvent, pointerType) {\n    var state = ref.current;\n    if (isDisabled || state.didFirePressStart) return false;\n    var shouldStopPropagation = true;\n    state.isTriggeringEvent = true;\n    if (onPressStart) {\n      var event = new $f6c31cce2adf654f$var$PressEvent(\"pressstart\", pointerType, originalEvent);\n      onPressStart(event);\n      shouldStopPropagation = event.shouldStopPropagation;\n    }\n    if (onPressChange) onPressChange(true);\n    state.isTriggeringEvent = false;\n    state.didFirePressStart = true;\n    setPressed(true);\n    return shouldStopPropagation;\n  });\n  var triggerPressEnd = (0, $7mdmh$useEffectEvent)(function (originalEvent, pointerType) {\n    var wasPressed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var state = ref.current;\n    if (!state.didFirePressStart) return false;\n    state.ignoreClickAfterPress = true;\n    state.didFirePressStart = false;\n    state.isTriggeringEvent = true;\n    var shouldStopPropagation = true;\n    if (onPressEnd) {\n      var event = new $f6c31cce2adf654f$var$PressEvent(\"pressend\", pointerType, originalEvent);\n      onPressEnd(event);\n      shouldStopPropagation = event.shouldStopPropagation;\n    }\n    if (onPressChange) onPressChange(false);\n    setPressed(false);\n    if (onPress && wasPressed && !isDisabled) {\n      var _event = new $f6c31cce2adf654f$var$PressEvent(\"press\", pointerType, originalEvent);\n      onPress(_event);\n      shouldStopPropagation && (shouldStopPropagation = _event.shouldStopPropagation);\n    }\n    state.isTriggeringEvent = false;\n    return shouldStopPropagation;\n  });\n  var triggerPressUp = (0, $7mdmh$useEffectEvent)(function (originalEvent, pointerType) {\n    var state = ref.current;\n    if (isDisabled) return false;\n    if (onPressUp) {\n      state.isTriggeringEvent = true;\n      var event = new $f6c31cce2adf654f$var$PressEvent(\"pressup\", pointerType, originalEvent);\n      onPressUp(event);\n      state.isTriggeringEvent = false;\n      return event.shouldStopPropagation;\n    }\n    return true;\n  });\n  var cancel = (0, $7mdmh$useEffectEvent)(function (e) {\n    var state = ref.current;\n    if (state.isPressed && state.target) {\n      if (state.isOverTarget && state.pointerType != null) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n      state.isPressed = false;\n      state.isOverTarget = false;\n      state.activePointerId = null;\n      state.pointerType = null;\n      removeAllGlobalListeners();\n      if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(state.target);\n    }\n  });\n  var cancelOnPointerExit = (0, $7mdmh$useEffectEvent)(function (e) {\n    if (shouldCancelOnPointerExit) cancel(e);\n  });\n  var pressProps = (0, $7mdmh$useMemo)(function () {\n    var state = ref.current;\n    var pressProps = {\n      onKeyDown: function onKeyDown(e) {\n        if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && e.currentTarget.contains(e.target)) {\n          var _state_metaKeyEvents;\n          if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(e.target, e.key)) e.preventDefault();\n          var shouldStopPropagation = true;\n          if (!state.isPressed && !e.repeat) {\n            state.target = e.currentTarget;\n            state.isPressed = true;\n            shouldStopPropagation = triggerPressStart(e, \"keyboard\");\n            var originalTarget = e.currentTarget;\n            var pressUp = function pressUp(e) {\n              if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e, originalTarget) && !e.repeat && originalTarget.contains(e.target) && state.target) triggerPressUp($f6c31cce2adf654f$var$createEvent(state.target, e), \"keyboard\");\n            };\n            addGlobalListener((0, $7mdmh$getOwnerDocument)(e.currentTarget), \"keyup\", (0, $7mdmh$chain)(pressUp, onKeyUp), true);\n          }\n          if (shouldStopPropagation) e.stopPropagation();\n          if (e.metaKey && (0, $7mdmh$isMac)()) (_state_metaKeyEvents = state.metaKeyEvents) === null || _state_metaKeyEvents === void 0 ? void 0 : _state_metaKeyEvents.set(e.key, e.nativeEvent);\n        } else if (e.key === \"Meta\") state.metaKeyEvents = new Map();\n      },\n      onClick: function onClick(e) {\n        if (e && !e.currentTarget.contains(e.target)) return;\n        if (e && e.button === 0 && !state.isTriggeringEvent && !(0, $7mdmh$openLink).isOpening) {\n          var shouldStopPropagation = true;\n          if (isDisabled) e.preventDefault();\n          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && !state.isPressed && (state.pointerType === \"virtual\" || (0, $7mdmh$isVirtualClick)(e.nativeEvent))) {\n            if (!isDisabled && !preventFocusOnPress) (0, $7mdmh$focusWithoutScrolling)(e.currentTarget);\n            var stopPressStart = triggerPressStart(e, \"virtual\");\n            var stopPressUp = triggerPressUp(e, \"virtual\");\n            var stopPressEnd = triggerPressEnd(e, \"virtual\");\n            shouldStopPropagation = stopPressStart && stopPressUp && stopPressEnd;\n          }\n          state.ignoreEmulatedMouseEvents = false;\n          state.ignoreClickAfterPress = false;\n          if (shouldStopPropagation) e.stopPropagation();\n        }\n      }\n    };\n    var onKeyUp = function onKeyUp(e) {\n      var _state_metaKeyEvents;\n      if (state.isPressed && state.target && $f6c31cce2adf654f$var$isValidKeyboardEvent(e, state.target)) {\n        var _state_metaKeyEvents1;\n        if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(e.target, e.key)) e.preventDefault();\n        var target = e.target;\n        triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), \"keyboard\", state.target.contains(target));\n        removeAllGlobalListeners();\n        if (e.key !== \"Enter\" && $f6c31cce2adf654f$var$isHTMLAnchorLink(state.target) && state.target.contains(target) && !e[$f6c31cce2adf654f$var$LINK_CLICKED]) {\n          e[$f6c31cce2adf654f$var$LINK_CLICKED] = true;\n          (0, $7mdmh$openLink)(state.target, e, false);\n        }\n        state.isPressed = false;\n        (_state_metaKeyEvents1 = state.metaKeyEvents) === null || _state_metaKeyEvents1 === void 0 ? void 0 : _state_metaKeyEvents1.delete(e.key);\n      } else if (e.key === \"Meta\" && ((_state_metaKeyEvents = state.metaKeyEvents) === null || _state_metaKeyEvents === void 0 ? void 0 : _state_metaKeyEvents.size)) {\n        var _state_target;\n        var events = state.metaKeyEvents;\n        state.metaKeyEvents = undefined;\n        for (var event of events.values()) (_state_target = state.target) === null || _state_target === void 0 ? void 0 : _state_target.dispatchEvent(new KeyboardEvent(\"keyup\", event));\n      }\n    };\n    if (typeof PointerEvent !== \"undefined\") {\n      pressProps.onPointerDown = function (e) {\n        if (e.button !== 0 || !e.currentTarget.contains(e.target)) return;\n        if ((0, $7mdmh$isVirtualPointerEvent)(e.nativeEvent)) {\n          state.pointerType = \"virtual\";\n          return;\n        }\n        if ($f6c31cce2adf654f$var$shouldPreventDefault(e.currentTarget)) e.preventDefault();\n        state.pointerType = e.pointerType;\n        var shouldStopPropagation = true;\n        if (!state.isPressed) {\n          state.isPressed = true;\n          state.isOverTarget = true;\n          state.activePointerId = e.pointerId;\n          state.target = e.currentTarget;\n          if (!isDisabled && !preventFocusOnPress) (0, $7mdmh$focusWithoutScrolling)(e.currentTarget);\n          if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$16a4697467175487)(state.target);\n          shouldStopPropagation = triggerPressStart(e, state.pointerType);\n          addGlobalListener((0, $7mdmh$getOwnerDocument)(e.currentTarget), \"pointermove\", onPointerMove, false);\n          addGlobalListener((0, $7mdmh$getOwnerDocument)(e.currentTarget), \"pointerup\", onPointerUp, false);\n          addGlobalListener((0, $7mdmh$getOwnerDocument)(e.currentTarget), \"pointercancel\", onPointerCancel, false);\n        }\n        if (shouldStopPropagation) e.stopPropagation();\n      };\n      pressProps.onMouseDown = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        if (e.button === 0) {\n          if ($f6c31cce2adf654f$var$shouldPreventDefault(e.currentTarget)) e.preventDefault();\n          e.stopPropagation();\n        }\n      };\n      pressProps.onPointerUp = function (e) {\n        if (!e.currentTarget.contains(e.target) || state.pointerType === \"virtual\") return;\n        if (e.button === 0 && $f6c31cce2adf654f$var$isOverTarget(e, e.currentTarget)) triggerPressUp(e, state.pointerType || e.pointerType);\n      };\n      var onPointerMove = function onPointerMove(e) {\n        if (e.pointerId !== state.activePointerId) return;\n        if (state.target && $f6c31cce2adf654f$var$isOverTarget(e, state.target)) {\n          if (!state.isOverTarget && state.pointerType != null) {\n            state.isOverTarget = true;\n            triggerPressStart($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);\n          }\n        } else if (state.target && state.isOverTarget && state.pointerType != null) {\n          state.isOverTarget = false;\n          triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n          cancelOnPointerExit(e);\n        }\n      };\n      var onPointerUp = function onPointerUp(e) {\n        if (e.pointerId === state.activePointerId && state.isPressed && e.button === 0 && state.target) {\n          if ($f6c31cce2adf654f$var$isOverTarget(e, state.target) && state.pointerType != null) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);else if (state.isOverTarget && state.pointerType != null) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n          state.isPressed = false;\n          state.isOverTarget = false;\n          state.activePointerId = null;\n          state.pointerType = null;\n          removeAllGlobalListeners();\n          if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(state.target);\n        }\n      };\n      var onPointerCancel = function onPointerCancel(e) {\n        cancel(e);\n      };\n      pressProps.onDragStart = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        cancel(e);\n      };\n    } else {\n      pressProps.onMouseDown = function (e) {\n        if (e.button !== 0 || !e.currentTarget.contains(e.target)) return;\n        if ($f6c31cce2adf654f$var$shouldPreventDefault(e.currentTarget)) e.preventDefault();\n        if (state.ignoreEmulatedMouseEvents) {\n          e.stopPropagation();\n          return;\n        }\n        state.isPressed = true;\n        state.isOverTarget = true;\n        state.target = e.currentTarget;\n        state.pointerType = (0, $7mdmh$isVirtualClick)(e.nativeEvent) ? \"virtual\" : \"mouse\";\n        if (!isDisabled && !preventFocusOnPress) (0, $7mdmh$focusWithoutScrolling)(e.currentTarget);\n        var shouldStopPropagation = triggerPressStart(e, state.pointerType);\n        if (shouldStopPropagation) e.stopPropagation();\n        addGlobalListener((0, $7mdmh$getOwnerDocument)(e.currentTarget), \"mouseup\", onMouseUp, false);\n      };\n      pressProps.onMouseEnter = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        var shouldStopPropagation = true;\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents && state.pointerType != null) {\n          state.isOverTarget = true;\n          shouldStopPropagation = triggerPressStart(e, state.pointerType);\n        }\n        if (shouldStopPropagation) e.stopPropagation();\n      };\n      pressProps.onMouseLeave = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        var shouldStopPropagation = true;\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents && state.pointerType != null) {\n          state.isOverTarget = false;\n          shouldStopPropagation = triggerPressEnd(e, state.pointerType, false);\n          cancelOnPointerExit(e);\n        }\n        if (shouldStopPropagation) e.stopPropagation();\n      };\n      pressProps.onMouseUp = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        if (!state.ignoreEmulatedMouseEvents && e.button === 0) triggerPressUp(e, state.pointerType || \"mouse\");\n      };\n      var onMouseUp = function onMouseUp(e) {\n        if (e.button !== 0) return;\n        state.isPressed = false;\n        removeAllGlobalListeners();\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n          return;\n        }\n        if (state.target && $f6c31cce2adf654f$var$isOverTarget(e, state.target) && state.pointerType != null) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);else if (state.target && state.isOverTarget && state.pointerType != null) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n        state.isOverTarget = false;\n      };\n      pressProps.onTouchStart = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        var touch = $f6c31cce2adf654f$var$getTouchFromEvent(e.nativeEvent);\n        if (!touch) return;\n        state.activePointerId = touch.identifier;\n        state.ignoreEmulatedMouseEvents = true;\n        state.isOverTarget = true;\n        state.isPressed = true;\n        state.target = e.currentTarget;\n        state.pointerType = \"touch\";\n        if (!isDisabled && !preventFocusOnPress) (0, $7mdmh$focusWithoutScrolling)(e.currentTarget);\n        if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$16a4697467175487)(state.target);\n        var shouldStopPropagation = triggerPressStart(e, state.pointerType);\n        if (shouldStopPropagation) e.stopPropagation();\n        addGlobalListener((0, $7mdmh$getOwnerWindow)(e.currentTarget), \"scroll\", onScroll, true);\n      };\n      pressProps.onTouchMove = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        if (!state.isPressed) {\n          e.stopPropagation();\n          return;\n        }\n        var touch = $f6c31cce2adf654f$var$getTouchById(e.nativeEvent, state.activePointerId);\n        var shouldStopPropagation = true;\n        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e.currentTarget)) {\n          if (!state.isOverTarget && state.pointerType != null) {\n            state.isOverTarget = true;\n            shouldStopPropagation = triggerPressStart(e, state.pointerType);\n          }\n        } else if (state.isOverTarget && state.pointerType != null) {\n          state.isOverTarget = false;\n          shouldStopPropagation = triggerPressEnd(e, state.pointerType, false);\n          cancelOnPointerExit(e);\n        }\n        if (shouldStopPropagation) e.stopPropagation();\n      };\n      pressProps.onTouchEnd = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        if (!state.isPressed) {\n          e.stopPropagation();\n          return;\n        }\n        var touch = $f6c31cce2adf654f$var$getTouchById(e.nativeEvent, state.activePointerId);\n        var shouldStopPropagation = true;\n        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e.currentTarget) && state.pointerType != null) {\n          triggerPressUp(e, state.pointerType);\n          shouldStopPropagation = triggerPressEnd(e, state.pointerType);\n        } else if (state.isOverTarget && state.pointerType != null) shouldStopPropagation = triggerPressEnd(e, state.pointerType, false);\n        if (shouldStopPropagation) e.stopPropagation();\n        state.isPressed = false;\n        state.activePointerId = null;\n        state.isOverTarget = false;\n        state.ignoreEmulatedMouseEvents = true;\n        if (state.target && !allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(state.target);\n        removeAllGlobalListeners();\n      };\n      pressProps.onTouchCancel = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        e.stopPropagation();\n        if (state.isPressed) cancel(e);\n      };\n      var onScroll = function onScroll(e) {\n        if (state.isPressed && e.target.contains(state.target)) cancel({\n          currentTarget: state.target,\n          shiftKey: false,\n          ctrlKey: false,\n          metaKey: false,\n          altKey: false\n        });\n      };\n      pressProps.onDragStart = function (e) {\n        if (!e.currentTarget.contains(e.target)) return;\n        cancel(e);\n      };\n    }\n    return pressProps;\n  }, [addGlobalListener, isDisabled, preventFocusOnPress, removeAllGlobalListeners, allowTextSelectionOnPress, cancel, cancelOnPointerExit, triggerPressEnd, triggerPressStart, triggerPressUp]);\n  (0, $7mdmh$useEffect)(function () {\n    return function () {\n      var _ref_current_target;\n      if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)((_ref_current_target = ref.current.target) !== null && _ref_current_target !== void 0 ? _ref_current_target : undefined);\n    };\n  }, [allowTextSelectionOnPress]);\n  return {\n    isPressed: isPressedProp || isPressed,\n    pressProps: (0, $7mdmh$mergeProps)(domProps, pressProps)\n  };\n}\nfunction $f6c31cce2adf654f$var$isHTMLAnchorLink(target) {\n  return target.tagName === \"A\" && target.hasAttribute(\"href\");\n}\nfunction $f6c31cce2adf654f$var$isValidKeyboardEvent(event, currentTarget) {\n  var key = event.key,\n    code = event.code;\n  var element = currentTarget;\n  var role = element.getAttribute(\"role\");\n  return (key === \"Enter\" || key === \" \" || key === \"Spacebar\" || code === \"Space\") && !(element instanceof (0, $7mdmh$getOwnerWindow)(element).HTMLInputElement && !$f6c31cce2adf654f$var$isValidInputKey(element, key) || element instanceof (0, $7mdmh$getOwnerWindow)(element).HTMLTextAreaElement || element.isContentEditable) && !((role === \"link\" || !role && $f6c31cce2adf654f$var$isHTMLAnchorLink(element)) && key !== \"Enter\");\n}\nfunction $f6c31cce2adf654f$var$getTouchFromEvent(event) {\n  var targetTouches = event.targetTouches;\n  if (targetTouches.length > 0) return targetTouches[0];\n  return null;\n}\nfunction $f6c31cce2adf654f$var$getTouchById(event, pointerId) {\n  var changedTouches = event.changedTouches;\n  for (var i = 0; i < changedTouches.length; i++) {\n    var touch = changedTouches[i];\n    if (touch.identifier === pointerId) return touch;\n  }\n  return null;\n}\nfunction $f6c31cce2adf654f$var$createEvent(target, e) {\n  return {\n    currentTarget: target,\n    shiftKey: e.shiftKey,\n    ctrlKey: e.ctrlKey,\n    metaKey: e.metaKey,\n    altKey: e.altKey\n  };\n}\nfunction $f6c31cce2adf654f$var$getPointClientRect(point) {\n  var offsetX = 0;\n  var offsetY = 0;\n  if (point.width !== undefined) offsetX = point.width / 2;else if (point.radiusX !== undefined) offsetX = point.radiusX;\n  if (point.height !== undefined) offsetY = point.height / 2;else if (point.radiusY !== undefined) offsetY = point.radiusY;\n  return {\n    top: point.clientY - offsetY,\n    right: point.clientX + offsetX,\n    bottom: point.clientY + offsetY,\n    left: point.clientX - offsetX\n  };\n}\nfunction $f6c31cce2adf654f$var$areRectanglesOverlapping(a, b) {\n  if (a.left > b.right || b.left > a.right) return false;\n  if (a.top > b.bottom || b.top > a.bottom) return false;\n  return true;\n}\nfunction $f6c31cce2adf654f$var$isOverTarget(point, target) {\n  var rect = target.getBoundingClientRect();\n  var pointRect = $f6c31cce2adf654f$var$getPointClientRect(point);\n  return $f6c31cce2adf654f$var$areRectanglesOverlapping(rect, pointRect);\n}\nfunction $f6c31cce2adf654f$var$shouldPreventDefault(target) {\n  return !(target instanceof HTMLElement) || !target.hasAttribute(\"draggable\");\n}\nfunction $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(target, key) {\n  if (target instanceof HTMLInputElement) return !$f6c31cce2adf654f$var$isValidInputKey(target, key);\n  if (target instanceof HTMLButtonElement) return target.type !== \"submit\" && target.type !== \"reset\";\n  if ($f6c31cce2adf654f$var$isHTMLAnchorLink(target)) return false;\n  return true;\n}\nvar $f6c31cce2adf654f$var$nonTextInputTypes = new Set([\"checkbox\", \"radio\", \"range\", \"color\", \"file\", \"image\", \"button\", \"submit\", \"reset\"]);\nfunction $f6c31cce2adf654f$var$isValidInputKey(target, key) {\n  return target.type === \"checkbox\" || target.type === \"radio\" ? key === \" \" : $f6c31cce2adf654f$var$nonTextInputTypes.has(target.type);\n}\nexport { $f6c31cce2adf654f$export$45712eceda6fad21 as usePress };","map":{"version":3,"names":["disableTextSelection","$14c0b72509d70225$export$16a4697467175487","restoreTextSelection","$14c0b72509d70225$export$b0d6fa1ab32e3295","PressResponderContext","$ae1eeba8b9eafd08$export$5165eccb35aaadb5","_","$7mdmh$_","$7mdmh$_1","$7mdmh$_2","mergeProps","$7mdmh$mergeProps","useSyncRef","$7mdmh$useSyncRef","useGlobalListeners","$7mdmh$useGlobalListeners","useEffectEvent","$7mdmh$useEffectEvent","getOwnerDocument","$7mdmh$getOwnerDocument","chain","$7mdmh$chain","isMac","$7mdmh$isMac","openLink","$7mdmh$openLink","isVirtualClick","$7mdmh$isVirtualClick","focusWithoutScrolling","$7mdmh$focusWithoutScrolling","isVirtualPointerEvent","$7mdmh$isVirtualPointerEvent","getOwnerWindow","$7mdmh$getOwnerWindow","useContext","$7mdmh$useContext","useState","$7mdmh$useState","useRef","$7mdmh$useRef","useMemo","$7mdmh$useMemo","useEffect","$7mdmh$useEffect","$f6c31cce2adf654f$var$usePressResponderContext","props","context","register","contextProps","_objectWithoutProperties","_excluded","ref","$f6c31cce2adf654f$var$_shouldStopPropagation","WeakMap","$f6c31cce2adf654f$var$PressEvent","type","pointerType","originalEvent","_classCallCheck","writable","value","target","currentTarget","shiftKey","metaKey","ctrlKey","altKey","_createClass","key","continuePropagation","get","$f6c31cce2adf654f$var$LINK_CLICKED","Symbol","$f6c31cce2adf654f$export$45712eceda6fad21","_$f6c31cce2adf654f$va","onPress","onPressChange","onPressStart","onPressEnd","onPressUp","isDisabled","isPressedProp","isPressed","preventFocusOnPress","shouldCancelOnPointerExit","allowTextSelectionOnPress","domProps","_excluded2","_ref","_ref2","_slicedToArray","setPressed","ignoreEmulatedMouseEvents","ignoreClickAfterPress","didFirePressStart","isTriggeringEvent","activePointerId","isOverTarget","_ref3","addGlobalListener","removeAllGlobalListeners","triggerPressStart","state","current","shouldStopPropagation","event","triggerPressEnd","wasPressed","arguments","length","undefined","triggerPressUp","cancel","e","$f6c31cce2adf654f$var$createEvent","cancelOnPointerExit","pressProps","onKeyDown","$f6c31cce2adf654f$var$isValidKeyboardEvent","nativeEvent","contains","_state_metaKeyEvents","$f6c31cce2adf654f$var$shouldPreventDefaultKeyboard","preventDefault","repeat","originalTarget","pressUp","onKeyUp","stopPropagation","metaKeyEvents","set","Map","onClick","button","isOpening","stopPressStart","stopPressUp","stopPressEnd","_state_metaKeyEvents1","$f6c31cce2adf654f$var$isHTMLAnchorLink","delete","size","_state_target","events","values","dispatchEvent","KeyboardEvent","PointerEvent","onPointerDown","$f6c31cce2adf654f$var$shouldPreventDefault","pointerId","onPointerMove","onPointerUp","onPointerCancel","onMouseDown","$f6c31cce2adf654f$var$isOverTarget","onDragStart","onMouseUp","onMouseEnter","onMouseLeave","onTouchStart","touch","$f6c31cce2adf654f$var$getTouchFromEvent","identifier","onScroll","onTouchMove","$f6c31cce2adf654f$var$getTouchById","onTouchEnd","onTouchCancel","_ref_current_target","tagName","hasAttribute","code","element","role","getAttribute","HTMLInputElement","$f6c31cce2adf654f$var$isValidInputKey","HTMLTextAreaElement","isContentEditable","targetTouches","changedTouches","i","$f6c31cce2adf654f$var$getPointClientRect","point","offsetX","offsetY","width","radiusX","height","radiusY","top","clientY","right","clientX","bottom","left","$f6c31cce2adf654f$var$areRectanglesOverlapping","a","b","rect","getBoundingClientRect","pointRect","HTMLElement","HTMLButtonElement","$f6c31cce2adf654f$var$nonTextInputTypes","Set","has","usePress"],"sources":["D:/React Native/Expo+glustack/Music-App/node_modules/@react-aria/interactions/dist/usePress.mjs"],"sourcesContent":["import {disableTextSelection as $14c0b72509d70225$export$16a4697467175487, restoreTextSelection as $14c0b72509d70225$export$b0d6fa1ab32e3295} from \"./textSelection.mjs\";\nimport {PressResponderContext as $ae1eeba8b9eafd08$export$5165eccb35aaadb5} from \"./context.mjs\";\nimport {_ as $7mdmh$_} from \"@swc/helpers/_/_class_private_field_get\";\nimport {_ as $7mdmh$_1} from \"@swc/helpers/_/_class_private_field_init\";\nimport {_ as $7mdmh$_2} from \"@swc/helpers/_/_class_private_field_set\";\nimport {mergeProps as $7mdmh$mergeProps, useSyncRef as $7mdmh$useSyncRef, useGlobalListeners as $7mdmh$useGlobalListeners, useEffectEvent as $7mdmh$useEffectEvent, getOwnerDocument as $7mdmh$getOwnerDocument, chain as $7mdmh$chain, isMac as $7mdmh$isMac, openLink as $7mdmh$openLink, isVirtualClick as $7mdmh$isVirtualClick, focusWithoutScrolling as $7mdmh$focusWithoutScrolling, isVirtualPointerEvent as $7mdmh$isVirtualPointerEvent, getOwnerWindow as $7mdmh$getOwnerWindow} from \"@react-aria/utils\";\nimport {useContext as $7mdmh$useContext, useState as $7mdmh$useState, useRef as $7mdmh$useRef, useMemo as $7mdmh$useMemo, useEffect as $7mdmh$useEffect} from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ // Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\n\n\n\n\n\n\nfunction $f6c31cce2adf654f$var$usePressResponderContext(props) {\n    // Consume context from <PressResponder> and merge with props.\n    let context = (0, $7mdmh$useContext)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5));\n    if (context) {\n        let { register: register, ...contextProps } = context;\n        props = (0, $7mdmh$mergeProps)(contextProps, props);\n        register();\n    }\n    (0, $7mdmh$useSyncRef)(context, props.ref);\n    return props;\n}\nvar $f6c31cce2adf654f$var$_shouldStopPropagation = /*#__PURE__*/ new WeakMap();\nclass $f6c31cce2adf654f$var$PressEvent {\n    continuePropagation() {\n        (0, $7mdmh$_2)(this, $f6c31cce2adf654f$var$_shouldStopPropagation, false);\n    }\n    get shouldStopPropagation() {\n        return (0, $7mdmh$_)(this, $f6c31cce2adf654f$var$_shouldStopPropagation);\n    }\n    constructor(type, pointerType, originalEvent){\n        (0, $7mdmh$_1)(this, $f6c31cce2adf654f$var$_shouldStopPropagation, {\n            writable: true,\n            value: void 0\n        });\n        (0, $7mdmh$_2)(this, $f6c31cce2adf654f$var$_shouldStopPropagation, true);\n        this.type = type;\n        this.pointerType = pointerType;\n        this.target = originalEvent.currentTarget;\n        this.shiftKey = originalEvent.shiftKey;\n        this.metaKey = originalEvent.metaKey;\n        this.ctrlKey = originalEvent.ctrlKey;\n        this.altKey = originalEvent.altKey;\n    }\n}\nconst $f6c31cce2adf654f$var$LINK_CLICKED = Symbol(\"linkClicked\");\nfunction $f6c31cce2adf654f$export$45712eceda6fad21(props) {\n    let { onPress: onPress, onPressChange: onPressChange, onPressStart: onPressStart, onPressEnd: onPressEnd, onPressUp: onPressUp, isDisabled: isDisabled, isPressed: isPressedProp, preventFocusOnPress: preventFocusOnPress, shouldCancelOnPointerExit: shouldCancelOnPointerExit, allowTextSelectionOnPress: allowTextSelectionOnPress, // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref: _, ...domProps } = $f6c31cce2adf654f$var$usePressResponderContext(props);\n    let [isPressed, setPressed] = (0, $7mdmh$useState)(false);\n    let ref = (0, $7mdmh$useRef)({\n        isPressed: false,\n        ignoreEmulatedMouseEvents: false,\n        ignoreClickAfterPress: false,\n        didFirePressStart: false,\n        isTriggeringEvent: false,\n        activePointerId: null,\n        target: null,\n        isOverTarget: false,\n        pointerType: null\n    });\n    let { addGlobalListener: addGlobalListener, removeAllGlobalListeners: removeAllGlobalListeners } = (0, $7mdmh$useGlobalListeners)();\n    let triggerPressStart = (0, $7mdmh$useEffectEvent)((originalEvent, pointerType)=>{\n        let state = ref.current;\n        if (isDisabled || state.didFirePressStart) return false;\n        let shouldStopPropagation = true;\n        state.isTriggeringEvent = true;\n        if (onPressStart) {\n            let event = new $f6c31cce2adf654f$var$PressEvent(\"pressstart\", pointerType, originalEvent);\n            onPressStart(event);\n            shouldStopPropagation = event.shouldStopPropagation;\n        }\n        if (onPressChange) onPressChange(true);\n        state.isTriggeringEvent = false;\n        state.didFirePressStart = true;\n        setPressed(true);\n        return shouldStopPropagation;\n    });\n    let triggerPressEnd = (0, $7mdmh$useEffectEvent)((originalEvent, pointerType, wasPressed = true)=>{\n        let state = ref.current;\n        if (!state.didFirePressStart) return false;\n        state.ignoreClickAfterPress = true;\n        state.didFirePressStart = false;\n        state.isTriggeringEvent = true;\n        let shouldStopPropagation = true;\n        if (onPressEnd) {\n            let event = new $f6c31cce2adf654f$var$PressEvent(\"pressend\", pointerType, originalEvent);\n            onPressEnd(event);\n            shouldStopPropagation = event.shouldStopPropagation;\n        }\n        if (onPressChange) onPressChange(false);\n        setPressed(false);\n        if (onPress && wasPressed && !isDisabled) {\n            let event = new $f6c31cce2adf654f$var$PressEvent(\"press\", pointerType, originalEvent);\n            onPress(event);\n            shouldStopPropagation && (shouldStopPropagation = event.shouldStopPropagation);\n        }\n        state.isTriggeringEvent = false;\n        return shouldStopPropagation;\n    });\n    let triggerPressUp = (0, $7mdmh$useEffectEvent)((originalEvent, pointerType)=>{\n        let state = ref.current;\n        if (isDisabled) return false;\n        if (onPressUp) {\n            state.isTriggeringEvent = true;\n            let event = new $f6c31cce2adf654f$var$PressEvent(\"pressup\", pointerType, originalEvent);\n            onPressUp(event);\n            state.isTriggeringEvent = false;\n            return event.shouldStopPropagation;\n        }\n        return true;\n    });\n    let cancel = (0, $7mdmh$useEffectEvent)((e)=>{\n        let state = ref.current;\n        if (state.isPressed && state.target) {\n            if (state.isOverTarget && state.pointerType != null) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n            state.isPressed = false;\n            state.isOverTarget = false;\n            state.activePointerId = null;\n            state.pointerType = null;\n            removeAllGlobalListeners();\n            if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(state.target);\n        }\n    });\n    let cancelOnPointerExit = (0, $7mdmh$useEffectEvent)((e)=>{\n        if (shouldCancelOnPointerExit) cancel(e);\n    });\n    let pressProps = (0, $7mdmh$useMemo)(()=>{\n        let state = ref.current;\n        let pressProps = {\n            onKeyDown (e) {\n                if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && e.currentTarget.contains(e.target)) {\n                    var _state_metaKeyEvents;\n                    if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(e.target, e.key)) e.preventDefault();\n                    // If the event is repeating, it may have started on a different element\n                    // after which focus moved to the current element. Ignore these events and\n                    // only handle the first key down event.\n                    let shouldStopPropagation = true;\n                    if (!state.isPressed && !e.repeat) {\n                        state.target = e.currentTarget;\n                        state.isPressed = true;\n                        shouldStopPropagation = triggerPressStart(e, \"keyboard\");\n                        // Focus may move before the key up event, so register the event on the document\n                        // instead of the same element where the key down event occurred. Make it capturing so that it will trigger\n                        // before stopPropagation from useKeyboard on a child element may happen and thus we can still call triggerPress for the parent element.\n                        let originalTarget = e.currentTarget;\n                        let pressUp = (e)=>{\n                            if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e, originalTarget) && !e.repeat && originalTarget.contains(e.target) && state.target) triggerPressUp($f6c31cce2adf654f$var$createEvent(state.target, e), \"keyboard\");\n                        };\n                        addGlobalListener((0, $7mdmh$getOwnerDocument)(e.currentTarget), \"keyup\", (0, $7mdmh$chain)(pressUp, onKeyUp), true);\n                    }\n                    if (shouldStopPropagation) e.stopPropagation();\n                    // Keep track of the keydown events that occur while the Meta (e.g. Command) key is held.\n                    // macOS has a bug where keyup events are not fired while the Meta key is down.\n                    // When the Meta key itself is released we will get an event for that, and we'll act as if\n                    // all of these other keys were released as well.\n                    // https://bugs.chromium.org/p/chromium/issues/detail?id=1393524\n                    // https://bugs.webkit.org/show_bug.cgi?id=55291\n                    // https://bugzilla.mozilla.org/show_bug.cgi?id=1299553\n                    if (e.metaKey && (0, $7mdmh$isMac)()) (_state_metaKeyEvents = state.metaKeyEvents) === null || _state_metaKeyEvents === void 0 ? void 0 : _state_metaKeyEvents.set(e.key, e.nativeEvent);\n                } else if (e.key === \"Meta\") state.metaKeyEvents = new Map();\n            },\n            onClick (e) {\n                if (e && !e.currentTarget.contains(e.target)) return;\n                if (e && e.button === 0 && !state.isTriggeringEvent && !(0, $7mdmh$openLink).isOpening) {\n                    let shouldStopPropagation = true;\n                    if (isDisabled) e.preventDefault();\n                    // If triggered from a screen reader or by using element.click(),\n                    // trigger as if it were a keyboard click.\n                    if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && !state.isPressed && (state.pointerType === \"virtual\" || (0, $7mdmh$isVirtualClick)(e.nativeEvent))) {\n                        // Ensure the element receives focus (VoiceOver on iOS does not do this)\n                        if (!isDisabled && !preventFocusOnPress) (0, $7mdmh$focusWithoutScrolling)(e.currentTarget);\n                        let stopPressStart = triggerPressStart(e, \"virtual\");\n                        let stopPressUp = triggerPressUp(e, \"virtual\");\n                        let stopPressEnd = triggerPressEnd(e, \"virtual\");\n                        shouldStopPropagation = stopPressStart && stopPressUp && stopPressEnd;\n                    }\n                    state.ignoreEmulatedMouseEvents = false;\n                    state.ignoreClickAfterPress = false;\n                    if (shouldStopPropagation) e.stopPropagation();\n                }\n            }\n        };\n        let onKeyUp = (e)=>{\n            var _state_metaKeyEvents;\n            if (state.isPressed && state.target && $f6c31cce2adf654f$var$isValidKeyboardEvent(e, state.target)) {\n                var _state_metaKeyEvents1;\n                if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(e.target, e.key)) e.preventDefault();\n                let target = e.target;\n                triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), \"keyboard\", state.target.contains(target));\n                removeAllGlobalListeners();\n                // If a link was triggered with a key other than Enter, open the URL ourselves.\n                // This means the link has a role override, and the default browser behavior\n                // only applies when using the Enter key.\n                if (e.key !== \"Enter\" && $f6c31cce2adf654f$var$isHTMLAnchorLink(state.target) && state.target.contains(target) && !e[$f6c31cce2adf654f$var$LINK_CLICKED]) {\n                    // Store a hidden property on the event so we only trigger link click once,\n                    // even if there are multiple usePress instances attached to the element.\n                    e[$f6c31cce2adf654f$var$LINK_CLICKED] = true;\n                    (0, $7mdmh$openLink)(state.target, e, false);\n                }\n                state.isPressed = false;\n                (_state_metaKeyEvents1 = state.metaKeyEvents) === null || _state_metaKeyEvents1 === void 0 ? void 0 : _state_metaKeyEvents1.delete(e.key);\n            } else if (e.key === \"Meta\" && ((_state_metaKeyEvents = state.metaKeyEvents) === null || _state_metaKeyEvents === void 0 ? void 0 : _state_metaKeyEvents.size)) {\n                var _state_target;\n                // If we recorded keydown events that occurred while the Meta key was pressed,\n                // and those haven't received keyup events already, fire keyup events ourselves.\n                // See comment above for more info about the macOS bug causing this.\n                let events = state.metaKeyEvents;\n                state.metaKeyEvents = undefined;\n                for (let event of events.values())(_state_target = state.target) === null || _state_target === void 0 ? void 0 : _state_target.dispatchEvent(new KeyboardEvent(\"keyup\", event));\n            }\n        };\n        if (typeof PointerEvent !== \"undefined\") {\n            pressProps.onPointerDown = (e)=>{\n                // Only handle left clicks, and ignore events that bubbled through portals.\n                if (e.button !== 0 || !e.currentTarget.contains(e.target)) return;\n                // iOS safari fires pointer events from VoiceOver with incorrect coordinates/target.\n                // Ignore and let the onClick handler take care of it instead.\n                // https://bugs.webkit.org/show_bug.cgi?id=222627\n                // https://bugs.webkit.org/show_bug.cgi?id=223202\n                if ((0, $7mdmh$isVirtualPointerEvent)(e.nativeEvent)) {\n                    state.pointerType = \"virtual\";\n                    return;\n                }\n                // Due to browser inconsistencies, especially on mobile browsers, we prevent\n                // default on pointer down and handle focusing the pressable element ourselves.\n                if ($f6c31cce2adf654f$var$shouldPreventDefault(e.currentTarget)) e.preventDefault();\n                state.pointerType = e.pointerType;\n                let shouldStopPropagation = true;\n                if (!state.isPressed) {\n                    state.isPressed = true;\n                    state.isOverTarget = true;\n                    state.activePointerId = e.pointerId;\n                    state.target = e.currentTarget;\n                    if (!isDisabled && !preventFocusOnPress) (0, $7mdmh$focusWithoutScrolling)(e.currentTarget);\n                    if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$16a4697467175487)(state.target);\n                    shouldStopPropagation = triggerPressStart(e, state.pointerType);\n                    addGlobalListener((0, $7mdmh$getOwnerDocument)(e.currentTarget), \"pointermove\", onPointerMove, false);\n                    addGlobalListener((0, $7mdmh$getOwnerDocument)(e.currentTarget), \"pointerup\", onPointerUp, false);\n                    addGlobalListener((0, $7mdmh$getOwnerDocument)(e.currentTarget), \"pointercancel\", onPointerCancel, false);\n                }\n                if (shouldStopPropagation) e.stopPropagation();\n            };\n            pressProps.onMouseDown = (e)=>{\n                if (!e.currentTarget.contains(e.target)) return;\n                if (e.button === 0) {\n                    // Chrome and Firefox on touch Windows devices require mouse down events\n                    // to be canceled in addition to pointer events, or an extra asynchronous\n                    // focus event will be fired.\n                    if ($f6c31cce2adf654f$var$shouldPreventDefault(e.currentTarget)) e.preventDefault();\n                    e.stopPropagation();\n                }\n            };\n            pressProps.onPointerUp = (e)=>{\n                // iOS fires pointerup with zero width and height, so check the pointerType recorded during pointerdown.\n                if (!e.currentTarget.contains(e.target) || state.pointerType === \"virtual\") return;\n                // Only handle left clicks\n                // Safari on iOS sometimes fires pointerup events, even\n                // when the touch isn't over the target, so double check.\n                if (e.button === 0 && $f6c31cce2adf654f$var$isOverTarget(e, e.currentTarget)) triggerPressUp(e, state.pointerType || e.pointerType);\n            };\n            // Safari on iOS < 13.2 does not implement pointerenter/pointerleave events correctly.\n            // Use pointer move events instead to implement our own hit testing.\n            // See https://bugs.webkit.org/show_bug.cgi?id=199803\n            let onPointerMove = (e)=>{\n                if (e.pointerId !== state.activePointerId) return;\n                if (state.target && $f6c31cce2adf654f$var$isOverTarget(e, state.target)) {\n                    if (!state.isOverTarget && state.pointerType != null) {\n                        state.isOverTarget = true;\n                        triggerPressStart($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);\n                    }\n                } else if (state.target && state.isOverTarget && state.pointerType != null) {\n                    state.isOverTarget = false;\n                    triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n                    cancelOnPointerExit(e);\n                }\n            };\n            let onPointerUp = (e)=>{\n                if (e.pointerId === state.activePointerId && state.isPressed && e.button === 0 && state.target) {\n                    if ($f6c31cce2adf654f$var$isOverTarget(e, state.target) && state.pointerType != null) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);\n                    else if (state.isOverTarget && state.pointerType != null) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n                    state.isPressed = false;\n                    state.isOverTarget = false;\n                    state.activePointerId = null;\n                    state.pointerType = null;\n                    removeAllGlobalListeners();\n                    if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(state.target);\n                }\n            };\n            let onPointerCancel = (e)=>{\n                cancel(e);\n            };\n            pressProps.onDragStart = (e)=>{\n                if (!e.currentTarget.contains(e.target)) return;\n                // Safari does not call onPointerCancel when a drag starts, whereas Chrome and Firefox do.\n                cancel(e);\n            };\n        } else {\n            pressProps.onMouseDown = (e)=>{\n                // Only handle left clicks\n                if (e.button !== 0 || !e.currentTarget.contains(e.target)) return;\n                // Due to browser inconsistencies, especially on mobile browsers, we prevent\n                // default on mouse down and handle focusing the pressable element ourselves.\n                if ($f6c31cce2adf654f$var$shouldPreventDefault(e.currentTarget)) e.preventDefault();\n                if (state.ignoreEmulatedMouseEvents) {\n                    e.stopPropagation();\n                    return;\n                }\n                state.isPressed = true;\n                state.isOverTarget = true;\n                state.target = e.currentTarget;\n                state.pointerType = (0, $7mdmh$isVirtualClick)(e.nativeEvent) ? \"virtual\" : \"mouse\";\n                if (!isDisabled && !preventFocusOnPress) (0, $7mdmh$focusWithoutScrolling)(e.currentTarget);\n                let shouldStopPropagation = triggerPressStart(e, state.pointerType);\n                if (shouldStopPropagation) e.stopPropagation();\n                addGlobalListener((0, $7mdmh$getOwnerDocument)(e.currentTarget), \"mouseup\", onMouseUp, false);\n            };\n            pressProps.onMouseEnter = (e)=>{\n                if (!e.currentTarget.contains(e.target)) return;\n                let shouldStopPropagation = true;\n                if (state.isPressed && !state.ignoreEmulatedMouseEvents && state.pointerType != null) {\n                    state.isOverTarget = true;\n                    shouldStopPropagation = triggerPressStart(e, state.pointerType);\n                }\n                if (shouldStopPropagation) e.stopPropagation();\n            };\n            pressProps.onMouseLeave = (e)=>{\n                if (!e.currentTarget.contains(e.target)) return;\n                let shouldStopPropagation = true;\n                if (state.isPressed && !state.ignoreEmulatedMouseEvents && state.pointerType != null) {\n                    state.isOverTarget = false;\n                    shouldStopPropagation = triggerPressEnd(e, state.pointerType, false);\n                    cancelOnPointerExit(e);\n                }\n                if (shouldStopPropagation) e.stopPropagation();\n            };\n            pressProps.onMouseUp = (e)=>{\n                if (!e.currentTarget.contains(e.target)) return;\n                if (!state.ignoreEmulatedMouseEvents && e.button === 0) triggerPressUp(e, state.pointerType || \"mouse\");\n            };\n            let onMouseUp = (e)=>{\n                // Only handle left clicks\n                if (e.button !== 0) return;\n                state.isPressed = false;\n                removeAllGlobalListeners();\n                if (state.ignoreEmulatedMouseEvents) {\n                    state.ignoreEmulatedMouseEvents = false;\n                    return;\n                }\n                if (state.target && $f6c31cce2adf654f$var$isOverTarget(e, state.target) && state.pointerType != null) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);\n                else if (state.target && state.isOverTarget && state.pointerType != null) triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);\n                state.isOverTarget = false;\n            };\n            pressProps.onTouchStart = (e)=>{\n                if (!e.currentTarget.contains(e.target)) return;\n                let touch = $f6c31cce2adf654f$var$getTouchFromEvent(e.nativeEvent);\n                if (!touch) return;\n                state.activePointerId = touch.identifier;\n                state.ignoreEmulatedMouseEvents = true;\n                state.isOverTarget = true;\n                state.isPressed = true;\n                state.target = e.currentTarget;\n                state.pointerType = \"touch\";\n                // Due to browser inconsistencies, especially on mobile browsers, we prevent default\n                // on the emulated mouse event and handle focusing the pressable element ourselves.\n                if (!isDisabled && !preventFocusOnPress) (0, $7mdmh$focusWithoutScrolling)(e.currentTarget);\n                if (!allowTextSelectionOnPress) (0, $14c0b72509d70225$export$16a4697467175487)(state.target);\n                let shouldStopPropagation = triggerPressStart(e, state.pointerType);\n                if (shouldStopPropagation) e.stopPropagation();\n                addGlobalListener((0, $7mdmh$getOwnerWindow)(e.currentTarget), \"scroll\", onScroll, true);\n            };\n            pressProps.onTouchMove = (e)=>{\n                if (!e.currentTarget.contains(e.target)) return;\n                if (!state.isPressed) {\n                    e.stopPropagation();\n                    return;\n                }\n                let touch = $f6c31cce2adf654f$var$getTouchById(e.nativeEvent, state.activePointerId);\n                let shouldStopPropagation = true;\n                if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e.currentTarget)) {\n                    if (!state.isOverTarget && state.pointerType != null) {\n                        state.isOverTarget = true;\n                        shouldStopPropagation = triggerPressStart(e, state.pointerType);\n                    }\n                } else if (state.isOverTarget && state.pointerType != null) {\n                    state.isOverTarget = false;\n                    shouldStopPropagation = triggerPressEnd(e, state.pointerType, false);\n                    cancelOnPointerExit(e);\n                }\n                if (shouldStopPropagation) e.stopPropagation();\n            };\n            pressProps.onTouchEnd = (e)=>{\n                if (!e.currentTarget.contains(e.target)) return;\n                if (!state.isPressed) {\n                    e.stopPropagation();\n                    return;\n                }\n                let touch = $f6c31cce2adf654f$var$getTouchById(e.nativeEvent, state.activePointerId);\n                let shouldStopPropagation = true;\n                if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e.currentTarget) && state.pointerType != null) {\n                    triggerPressUp(e, state.pointerType);\n                    shouldStopPropagation = triggerPressEnd(e, state.pointerType);\n                } else if (state.isOverTarget && state.pointerType != null) shouldStopPropagation = triggerPressEnd(e, state.pointerType, false);\n                if (shouldStopPropagation) e.stopPropagation();\n                state.isPressed = false;\n                state.activePointerId = null;\n                state.isOverTarget = false;\n                state.ignoreEmulatedMouseEvents = true;\n                if (state.target && !allowTextSelectionOnPress) (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(state.target);\n                removeAllGlobalListeners();\n            };\n            pressProps.onTouchCancel = (e)=>{\n                if (!e.currentTarget.contains(e.target)) return;\n                e.stopPropagation();\n                if (state.isPressed) cancel(e);\n            };\n            let onScroll = (e)=>{\n                if (state.isPressed && e.target.contains(state.target)) cancel({\n                    currentTarget: state.target,\n                    shiftKey: false,\n                    ctrlKey: false,\n                    metaKey: false,\n                    altKey: false\n                });\n            };\n            pressProps.onDragStart = (e)=>{\n                if (!e.currentTarget.contains(e.target)) return;\n                cancel(e);\n            };\n        }\n        return pressProps;\n    }, [\n        addGlobalListener,\n        isDisabled,\n        preventFocusOnPress,\n        removeAllGlobalListeners,\n        allowTextSelectionOnPress,\n        cancel,\n        cancelOnPointerExit,\n        triggerPressEnd,\n        triggerPressStart,\n        triggerPressUp\n    ]);\n    // Remove user-select: none in case component unmounts immediately after pressStart\n    // eslint-disable-next-line arrow-body-style\n    (0, $7mdmh$useEffect)(()=>{\n        return ()=>{\n            var _ref_current_target;\n            if (!allowTextSelectionOnPress) // eslint-disable-next-line react-hooks/exhaustive-deps\n            (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)((_ref_current_target = ref.current.target) !== null && _ref_current_target !== void 0 ? _ref_current_target : undefined);\n        };\n    }, [\n        allowTextSelectionOnPress\n    ]);\n    return {\n        isPressed: isPressedProp || isPressed,\n        pressProps: (0, $7mdmh$mergeProps)(domProps, pressProps)\n    };\n}\nfunction $f6c31cce2adf654f$var$isHTMLAnchorLink(target) {\n    return target.tagName === \"A\" && target.hasAttribute(\"href\");\n}\nfunction $f6c31cce2adf654f$var$isValidKeyboardEvent(event, currentTarget) {\n    const { key: key, code: code } = event;\n    const element = currentTarget;\n    const role = element.getAttribute(\"role\");\n    // Accessibility for keyboards. Space and Enter only.\n    // \"Spacebar\" is for IE 11\n    return (key === \"Enter\" || key === \" \" || key === \"Spacebar\" || code === \"Space\") && !(element instanceof (0, $7mdmh$getOwnerWindow)(element).HTMLInputElement && !$f6c31cce2adf654f$var$isValidInputKey(element, key) || element instanceof (0, $7mdmh$getOwnerWindow)(element).HTMLTextAreaElement || element.isContentEditable) && // Links should only trigger with Enter key\n    !((role === \"link\" || !role && $f6c31cce2adf654f$var$isHTMLAnchorLink(element)) && key !== \"Enter\");\n}\nfunction $f6c31cce2adf654f$var$getTouchFromEvent(event) {\n    const { targetTouches: targetTouches } = event;\n    if (targetTouches.length > 0) return targetTouches[0];\n    return null;\n}\nfunction $f6c31cce2adf654f$var$getTouchById(event, pointerId) {\n    const changedTouches = event.changedTouches;\n    for(let i = 0; i < changedTouches.length; i++){\n        const touch = changedTouches[i];\n        if (touch.identifier === pointerId) return touch;\n    }\n    return null;\n}\nfunction $f6c31cce2adf654f$var$createEvent(target, e) {\n    return {\n        currentTarget: target,\n        shiftKey: e.shiftKey,\n        ctrlKey: e.ctrlKey,\n        metaKey: e.metaKey,\n        altKey: e.altKey\n    };\n}\nfunction $f6c31cce2adf654f$var$getPointClientRect(point) {\n    let offsetX = 0;\n    let offsetY = 0;\n    if (point.width !== undefined) offsetX = point.width / 2;\n    else if (point.radiusX !== undefined) offsetX = point.radiusX;\n    if (point.height !== undefined) offsetY = point.height / 2;\n    else if (point.radiusY !== undefined) offsetY = point.radiusY;\n    return {\n        top: point.clientY - offsetY,\n        right: point.clientX + offsetX,\n        bottom: point.clientY + offsetY,\n        left: point.clientX - offsetX\n    };\n}\nfunction $f6c31cce2adf654f$var$areRectanglesOverlapping(a, b) {\n    // check if they cannot overlap on x axis\n    if (a.left > b.right || b.left > a.right) return false;\n    // check if they cannot overlap on y axis\n    if (a.top > b.bottom || b.top > a.bottom) return false;\n    return true;\n}\nfunction $f6c31cce2adf654f$var$isOverTarget(point, target) {\n    let rect = target.getBoundingClientRect();\n    let pointRect = $f6c31cce2adf654f$var$getPointClientRect(point);\n    return $f6c31cce2adf654f$var$areRectanglesOverlapping(rect, pointRect);\n}\nfunction $f6c31cce2adf654f$var$shouldPreventDefault(target) {\n    // We cannot prevent default if the target is a draggable element.\n    return !(target instanceof HTMLElement) || !target.hasAttribute(\"draggable\");\n}\nfunction $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(target, key) {\n    if (target instanceof HTMLInputElement) return !$f6c31cce2adf654f$var$isValidInputKey(target, key);\n    if (target instanceof HTMLButtonElement) return target.type !== \"submit\" && target.type !== \"reset\";\n    if ($f6c31cce2adf654f$var$isHTMLAnchorLink(target)) return false;\n    return true;\n}\nconst $f6c31cce2adf654f$var$nonTextInputTypes = new Set([\n    \"checkbox\",\n    \"radio\",\n    \"range\",\n    \"color\",\n    \"file\",\n    \"image\",\n    \"button\",\n    \"submit\",\n    \"reset\"\n]);\nfunction $f6c31cce2adf654f$var$isValidInputKey(target, key) {\n    // Only space should toggle checkboxes and radios, not enter.\n    return target.type === \"checkbox\" || target.type === \"radio\" ? key === \" \" : $f6c31cce2adf654f$var$nonTextInputTypes.has(target.type);\n}\n\n\nexport {$f6c31cce2adf654f$export$45712eceda6fad21 as usePress};\n//# sourceMappingURL=usePress.mjs.map\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
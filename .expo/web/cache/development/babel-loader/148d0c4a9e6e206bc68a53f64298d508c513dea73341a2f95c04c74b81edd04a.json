{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { Selection as $e40ea825a81a3709$export$52baac22726c72bf } from \"./Selection.mjs\";\nimport { compareNodeOrder as $jkhUT$compareNodeOrder, getFirstItem as $jkhUT$getFirstItem, getChildNodes as $jkhUT$getChildNodes } from \"@react-stately/collections\";\nvar $d496c0a20b6e58ec$export$6c8a5aaad13c9852 = function () {\n  function $d496c0a20b6e58ec$export$6c8a5aaad13c9852(collection, state, options) {\n    _classCallCheck(this, $d496c0a20b6e58ec$export$6c8a5aaad13c9852);\n    this.collection = collection;\n    this.state = state;\n    var _options_allowsCellSelection;\n    this.allowsCellSelection = (_options_allowsCellSelection = options === null || options === void 0 ? void 0 : options.allowsCellSelection) !== null && _options_allowsCellSelection !== void 0 ? _options_allowsCellSelection : false;\n    this._isSelectAll = null;\n  }\n  return _createClass($d496c0a20b6e58ec$export$6c8a5aaad13c9852, [{\n    key: \"selectionMode\",\n    get: function get() {\n      return this.state.selectionMode;\n    }\n  }, {\n    key: \"disallowEmptySelection\",\n    get: function get() {\n      return this.state.disallowEmptySelection;\n    }\n  }, {\n    key: \"selectionBehavior\",\n    get: function get() {\n      return this.state.selectionBehavior;\n    }\n  }, {\n    key: \"setSelectionBehavior\",\n    value: function setSelectionBehavior(selectionBehavior) {\n      this.state.setSelectionBehavior(selectionBehavior);\n    }\n  }, {\n    key: \"isFocused\",\n    get: function get() {\n      return this.state.isFocused;\n    }\n  }, {\n    key: \"setFocused\",\n    value: function setFocused(isFocused) {\n      this.state.setFocused(isFocused);\n    }\n  }, {\n    key: \"focusedKey\",\n    get: function get() {\n      return this.state.focusedKey;\n    }\n  }, {\n    key: \"childFocusStrategy\",\n    get: function get() {\n      return this.state.childFocusStrategy;\n    }\n  }, {\n    key: \"setFocusedKey\",\n    value: function setFocusedKey(key, childFocusStrategy) {\n      if (key == null || this.collection.getItem(key)) this.state.setFocusedKey(key, childFocusStrategy);\n    }\n  }, {\n    key: \"selectedKeys\",\n    get: function get() {\n      return this.state.selectedKeys === \"all\" ? new Set(this.getSelectAllKeys()) : this.state.selectedKeys;\n    }\n  }, {\n    key: \"rawSelection\",\n    get: function get() {\n      return this.state.selectedKeys;\n    }\n  }, {\n    key: \"isSelected\",\n    value: function isSelected(key) {\n      if (this.state.selectionMode === \"none\") return false;\n      key = this.getKey(key);\n      return this.state.selectedKeys === \"all\" ? this.canSelectItem(key) : this.state.selectedKeys.has(key);\n    }\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      return this.state.selectedKeys !== \"all\" && this.state.selectedKeys.size === 0;\n    }\n  }, {\n    key: \"isSelectAll\",\n    get: function get() {\n      if (this.isEmpty) return false;\n      if (this.state.selectedKeys === \"all\") return true;\n      if (this._isSelectAll != null) return this._isSelectAll;\n      var allKeys = this.getSelectAllKeys();\n      var selectedKeys = this.state.selectedKeys;\n      this._isSelectAll = allKeys.every(function (k) {\n        return selectedKeys.has(k);\n      });\n      return this._isSelectAll;\n    }\n  }, {\n    key: \"firstSelectedKey\",\n    get: function get() {\n      var first = null;\n      for (var key of this.state.selectedKeys) {\n        var item = this.collection.getItem(key);\n        if (!first || item && (0, $jkhUT$compareNodeOrder)(this.collection, item, first) < 0) first = item;\n      }\n      return first === null || first === void 0 ? void 0 : first.key;\n    }\n  }, {\n    key: \"lastSelectedKey\",\n    get: function get() {\n      var last = null;\n      for (var key of this.state.selectedKeys) {\n        var item = this.collection.getItem(key);\n        if (!last || item && (0, $jkhUT$compareNodeOrder)(this.collection, item, last) > 0) last = item;\n      }\n      return last === null || last === void 0 ? void 0 : last.key;\n    }\n  }, {\n    key: \"disabledKeys\",\n    get: function get() {\n      return this.state.disabledKeys;\n    }\n  }, {\n    key: \"disabledBehavior\",\n    get: function get() {\n      return this.state.disabledBehavior;\n    }\n  }, {\n    key: \"extendSelection\",\n    value: function extendSelection(toKey) {\n      if (this.selectionMode === \"none\") return;\n      if (this.selectionMode === \"single\") {\n        this.replaceSelection(toKey);\n        return;\n      }\n      toKey = this.getKey(toKey);\n      var selection;\n      if (this.state.selectedKeys === \"all\") selection = new (0, $e40ea825a81a3709$export$52baac22726c72bf)([toKey], toKey, toKey);else {\n        var selectedKeys = this.state.selectedKeys;\n        var anchorKey = selectedKeys.anchorKey || toKey;\n        selection = new (0, $e40ea825a81a3709$export$52baac22726c72bf)(selectedKeys, anchorKey, toKey);\n        for (var key of this.getKeyRange(anchorKey, selectedKeys.currentKey || toKey)) selection.delete(key);\n        for (var _key of this.getKeyRange(toKey, anchorKey)) if (this.canSelectItem(_key)) selection.add(_key);\n      }\n      this.state.setSelectedKeys(selection);\n    }\n  }, {\n    key: \"getKeyRange\",\n    value: function getKeyRange(from, to) {\n      var fromItem = this.collection.getItem(from);\n      var toItem = this.collection.getItem(to);\n      if (fromItem && toItem) {\n        if ((0, $jkhUT$compareNodeOrder)(this.collection, fromItem, toItem) <= 0) return this.getKeyRangeInternal(from, to);\n        return this.getKeyRangeInternal(to, from);\n      }\n      return [];\n    }\n  }, {\n    key: \"getKeyRangeInternal\",\n    value: function getKeyRangeInternal(from, to) {\n      var keys = [];\n      var key = from;\n      while (key) {\n        var item = this.collection.getItem(key);\n        if (item && item.type === \"item\" || item.type === \"cell\" && this.allowsCellSelection) keys.push(key);\n        if (key === to) return keys;\n        key = this.collection.getKeyAfter(key);\n      }\n      return [];\n    }\n  }, {\n    key: \"getKey\",\n    value: function getKey(key) {\n      var item = this.collection.getItem(key);\n      if (!item) return key;\n      if (item.type === \"cell\" && this.allowsCellSelection) return key;\n      while (item.type !== \"item\" && item.parentKey != null) item = this.collection.getItem(item.parentKey);\n      if (!item || item.type !== \"item\") return null;\n      return item.key;\n    }\n  }, {\n    key: \"toggleSelection\",\n    value: function toggleSelection(key) {\n      if (this.selectionMode === \"none\") return;\n      if (this.selectionMode === \"single\" && !this.isSelected(key)) {\n        this.replaceSelection(key);\n        return;\n      }\n      key = this.getKey(key);\n      if (key == null) return;\n      var keys = new (0, $e40ea825a81a3709$export$52baac22726c72bf)(this.state.selectedKeys === \"all\" ? this.getSelectAllKeys() : this.state.selectedKeys);\n      if (keys.has(key)) keys.delete(key);else if (this.canSelectItem(key)) {\n        keys.add(key);\n        keys.anchorKey = key;\n        keys.currentKey = key;\n      }\n      if (this.disallowEmptySelection && keys.size === 0) return;\n      this.state.setSelectedKeys(keys);\n    }\n  }, {\n    key: \"replaceSelection\",\n    value: function replaceSelection(key) {\n      if (this.selectionMode === \"none\") return;\n      key = this.getKey(key);\n      if (key == null) return;\n      var selection = this.canSelectItem(key) ? new (0, $e40ea825a81a3709$export$52baac22726c72bf)([key], key, key) : new (0, $e40ea825a81a3709$export$52baac22726c72bf)();\n      this.state.setSelectedKeys(selection);\n    }\n  }, {\n    key: \"setSelectedKeys\",\n    value: function setSelectedKeys(keys) {\n      if (this.selectionMode === \"none\") return;\n      var selection = new (0, $e40ea825a81a3709$export$52baac22726c72bf)();\n      for (var key of keys) {\n        key = this.getKey(key);\n        if (key != null) {\n          selection.add(key);\n          if (this.selectionMode === \"single\") break;\n        }\n      }\n      this.state.setSelectedKeys(selection);\n    }\n  }, {\n    key: \"getSelectAllKeys\",\n    value: function getSelectAllKeys() {\n      var _this = this;\n      var keys = [];\n      var addKeys = function addKeys(key) {\n        while (key) {\n          if (_this.canSelectItem(key)) {\n            var item = _this.collection.getItem(key);\n            if (item.type === \"item\") keys.push(key);\n            if (item.hasChildNodes && (_this.allowsCellSelection || item.type !== \"item\")) addKeys((0, $jkhUT$getFirstItem)((0, $jkhUT$getChildNodes)(item, _this.collection)).key);\n          }\n          key = _this.collection.getKeyAfter(key);\n        }\n      };\n      addKeys(this.collection.getFirstKey());\n      return keys;\n    }\n  }, {\n    key: \"selectAll\",\n    value: function selectAll() {\n      if (!this.isSelectAll && this.selectionMode === \"multiple\") this.state.setSelectedKeys(\"all\");\n    }\n  }, {\n    key: \"clearSelection\",\n    value: function clearSelection() {\n      if (!this.disallowEmptySelection && (this.state.selectedKeys === \"all\" || this.state.selectedKeys.size > 0)) this.state.setSelectedKeys(new (0, $e40ea825a81a3709$export$52baac22726c72bf)());\n    }\n  }, {\n    key: \"toggleSelectAll\",\n    value: function toggleSelectAll() {\n      if (this.isSelectAll) this.clearSelection();else this.selectAll();\n    }\n  }, {\n    key: \"select\",\n    value: function select(key, e) {\n      if (this.selectionMode === \"none\") return;\n      if (this.selectionMode === \"single\") {\n        if (this.isSelected(key) && !this.disallowEmptySelection) this.toggleSelection(key);else this.replaceSelection(key);\n      } else if (this.selectionBehavior === \"toggle\" || e && (e.pointerType === \"touch\" || e.pointerType === \"virtual\")) this.toggleSelection(key);else this.replaceSelection(key);\n    }\n  }, {\n    key: \"isSelectionEqual\",\n    value: function isSelectionEqual(selection) {\n      if (selection === this.state.selectedKeys) return true;\n      var selectedKeys = this.selectedKeys;\n      if (selection.size !== selectedKeys.size) return false;\n      for (var key of selection) {\n        if (!selectedKeys.has(key)) return false;\n      }\n      for (var _key2 of selectedKeys) {\n        if (!selection.has(_key2)) return false;\n      }\n      return true;\n    }\n  }, {\n    key: \"canSelectItem\",\n    value: function canSelectItem(key) {\n      var _item_props;\n      if (this.state.selectionMode === \"none\" || this.state.disabledKeys.has(key)) return false;\n      var item = this.collection.getItem(key);\n      if (!item || (item === null || item === void 0 ? void 0 : (_item_props = item.props) === null || _item_props === void 0 ? void 0 : _item_props.isDisabled) || item.type === \"cell\" && !this.allowsCellSelection) return false;\n      return true;\n    }\n  }, {\n    key: \"isDisabled\",\n    value: function isDisabled(key) {\n      var _this_collection_getItem_props, _this_collection_getItem;\n      return this.state.disabledBehavior === \"all\" && (this.state.disabledKeys.has(key) || !!((_this_collection_getItem = this.collection.getItem(key)) === null || _this_collection_getItem === void 0 ? void 0 : (_this_collection_getItem_props = _this_collection_getItem.props) === null || _this_collection_getItem_props === void 0 ? void 0 : _this_collection_getItem_props.isDisabled));\n    }\n  }, {\n    key: \"isLink\",\n    value: function isLink(key) {\n      var _this_collection_getItem_props, _this_collection_getItem;\n      return !!((_this_collection_getItem = this.collection.getItem(key)) === null || _this_collection_getItem === void 0 ? void 0 : (_this_collection_getItem_props = _this_collection_getItem.props) === null || _this_collection_getItem_props === void 0 ? void 0 : _this_collection_getItem_props.href);\n    }\n  }, {\n    key: \"getItemProps\",\n    value: function getItemProps(key) {\n      var _this_collection_getItem;\n      return (_this_collection_getItem = this.collection.getItem(key)) === null || _this_collection_getItem === void 0 ? void 0 : _this_collection_getItem.props;\n    }\n  }]);\n}();\nexport { $d496c0a20b6e58ec$export$6c8a5aaad13c9852 as SelectionManager };","map":{"version":3,"names":["Selection","$e40ea825a81a3709$export$52baac22726c72bf","compareNodeOrder","$jkhUT$compareNodeOrder","getFirstItem","$jkhUT$getFirstItem","getChildNodes","$jkhUT$getChildNodes","$d496c0a20b6e58ec$export$6c8a5aaad13c9852","collection","state","options","_classCallCheck","_options_allowsCellSelection","allowsCellSelection","_isSelectAll","_createClass","key","get","selectionMode","disallowEmptySelection","selectionBehavior","value","setSelectionBehavior","isFocused","setFocused","focusedKey","childFocusStrategy","setFocusedKey","getItem","selectedKeys","Set","getSelectAllKeys","isSelected","getKey","canSelectItem","has","size","isEmpty","allKeys","every","k","first","item","last","disabledKeys","disabledBehavior","extendSelection","toKey","replaceSelection","selection","anchorKey","getKeyRange","currentKey","delete","add","setSelectedKeys","from","to","fromItem","toItem","getKeyRangeInternal","keys","type","push","getKeyAfter","parentKey","toggleSelection","_this","addKeys","hasChildNodes","getFirstKey","selectAll","isSelectAll","clearSelection","toggleSelectAll","select","e","pointerType","isSelectionEqual","_item_props","props","isDisabled","_this_collection_getItem_props","_this_collection_getItem","isLink","href","getItemProps","SelectionManager"],"sources":["D:/React Native/Expo+glustack/Music-App/node_modules/@react-stately/selection/dist/SelectionManager.mjs"],"sourcesContent":["import {Selection as $e40ea825a81a3709$export$52baac22726c72bf} from \"./Selection.mjs\";\nimport {compareNodeOrder as $jkhUT$compareNodeOrder, getFirstItem as $jkhUT$getFirstItem, getChildNodes as $jkhUT$getChildNodes} from \"@react-stately/collections\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\nclass $d496c0a20b6e58ec$export$6c8a5aaad13c9852 {\n    /**\n   * The type of selection that is allowed in the collection.\n   */ get selectionMode() {\n        return this.state.selectionMode;\n    }\n    /**\n   * Whether the collection allows empty selection.\n   */ get disallowEmptySelection() {\n        return this.state.disallowEmptySelection;\n    }\n    /**\n   * The selection behavior for the collection.\n   */ get selectionBehavior() {\n        return this.state.selectionBehavior;\n    }\n    /**\n   * Sets the selection behavior for the collection.\n   */ setSelectionBehavior(selectionBehavior) {\n        this.state.setSelectionBehavior(selectionBehavior);\n    }\n    /**\n   * Whether the collection is currently focused.\n   */ get isFocused() {\n        return this.state.isFocused;\n    }\n    /**\n   * Sets whether the collection is focused.\n   */ setFocused(isFocused) {\n        this.state.setFocused(isFocused);\n    }\n    /**\n   * The current focused key in the collection.\n   */ get focusedKey() {\n        return this.state.focusedKey;\n    }\n    /** Whether the first or last child of the focused key should receive focus. */ get childFocusStrategy() {\n        return this.state.childFocusStrategy;\n    }\n    /**\n   * Sets the focused key.\n   */ setFocusedKey(key, childFocusStrategy) {\n        if (key == null || this.collection.getItem(key)) this.state.setFocusedKey(key, childFocusStrategy);\n    }\n    /**\n   * The currently selected keys in the collection.\n   */ get selectedKeys() {\n        return this.state.selectedKeys === \"all\" ? new Set(this.getSelectAllKeys()) : this.state.selectedKeys;\n    }\n    /**\n   * The raw selection value for the collection.\n   * Either 'all' for select all, or a set of keys.\n   */ get rawSelection() {\n        return this.state.selectedKeys;\n    }\n    /**\n   * Returns whether a key is selected.\n   */ isSelected(key) {\n        if (this.state.selectionMode === \"none\") return false;\n        key = this.getKey(key);\n        return this.state.selectedKeys === \"all\" ? this.canSelectItem(key) : this.state.selectedKeys.has(key);\n    }\n    /**\n   * Whether the selection is empty.\n   */ get isEmpty() {\n        return this.state.selectedKeys !== \"all\" && this.state.selectedKeys.size === 0;\n    }\n    /**\n   * Whether all items in the collection are selected.\n   */ get isSelectAll() {\n        if (this.isEmpty) return false;\n        if (this.state.selectedKeys === \"all\") return true;\n        if (this._isSelectAll != null) return this._isSelectAll;\n        let allKeys = this.getSelectAllKeys();\n        let selectedKeys = this.state.selectedKeys;\n        this._isSelectAll = allKeys.every((k)=>selectedKeys.has(k));\n        return this._isSelectAll;\n    }\n    get firstSelectedKey() {\n        let first = null;\n        for (let key of this.state.selectedKeys){\n            let item = this.collection.getItem(key);\n            if (!first || item && (0, $jkhUT$compareNodeOrder)(this.collection, item, first) < 0) first = item;\n        }\n        return first === null || first === void 0 ? void 0 : first.key;\n    }\n    get lastSelectedKey() {\n        let last = null;\n        for (let key of this.state.selectedKeys){\n            let item = this.collection.getItem(key);\n            if (!last || item && (0, $jkhUT$compareNodeOrder)(this.collection, item, last) > 0) last = item;\n        }\n        return last === null || last === void 0 ? void 0 : last.key;\n    }\n    get disabledKeys() {\n        return this.state.disabledKeys;\n    }\n    get disabledBehavior() {\n        return this.state.disabledBehavior;\n    }\n    /**\n   * Extends the selection to the given key.\n   */ extendSelection(toKey) {\n        if (this.selectionMode === \"none\") return;\n        if (this.selectionMode === \"single\") {\n            this.replaceSelection(toKey);\n            return;\n        }\n        toKey = this.getKey(toKey);\n        let selection;\n        // Only select the one key if coming from a select all.\n        if (this.state.selectedKeys === \"all\") selection = new (0, $e40ea825a81a3709$export$52baac22726c72bf)([\n            toKey\n        ], toKey, toKey);\n        else {\n            let selectedKeys = this.state.selectedKeys;\n            let anchorKey = selectedKeys.anchorKey || toKey;\n            selection = new (0, $e40ea825a81a3709$export$52baac22726c72bf)(selectedKeys, anchorKey, toKey);\n            for (let key of this.getKeyRange(anchorKey, selectedKeys.currentKey || toKey))selection.delete(key);\n            for (let key of this.getKeyRange(toKey, anchorKey))if (this.canSelectItem(key)) selection.add(key);\n        }\n        this.state.setSelectedKeys(selection);\n    }\n    getKeyRange(from, to) {\n        let fromItem = this.collection.getItem(from);\n        let toItem = this.collection.getItem(to);\n        if (fromItem && toItem) {\n            if ((0, $jkhUT$compareNodeOrder)(this.collection, fromItem, toItem) <= 0) return this.getKeyRangeInternal(from, to);\n            return this.getKeyRangeInternal(to, from);\n        }\n        return [];\n    }\n    getKeyRangeInternal(from, to) {\n        let keys = [];\n        let key = from;\n        while(key){\n            let item = this.collection.getItem(key);\n            if (item && item.type === \"item\" || item.type === \"cell\" && this.allowsCellSelection) keys.push(key);\n            if (key === to) return keys;\n            key = this.collection.getKeyAfter(key);\n        }\n        return [];\n    }\n    getKey(key) {\n        let item = this.collection.getItem(key);\n        if (!item) // ¯\\_(ツ)_/¯\n        return key;\n        // If cell selection is allowed, just return the key.\n        if (item.type === \"cell\" && this.allowsCellSelection) return key;\n        // Find a parent item to select\n        while(item.type !== \"item\" && item.parentKey != null)item = this.collection.getItem(item.parentKey);\n        if (!item || item.type !== \"item\") return null;\n        return item.key;\n    }\n    /**\n   * Toggles whether the given key is selected.\n   */ toggleSelection(key) {\n        if (this.selectionMode === \"none\") return;\n        if (this.selectionMode === \"single\" && !this.isSelected(key)) {\n            this.replaceSelection(key);\n            return;\n        }\n        key = this.getKey(key);\n        if (key == null) return;\n        let keys = new (0, $e40ea825a81a3709$export$52baac22726c72bf)(this.state.selectedKeys === \"all\" ? this.getSelectAllKeys() : this.state.selectedKeys);\n        if (keys.has(key)) keys.delete(key);\n        else if (this.canSelectItem(key)) {\n            keys.add(key);\n            keys.anchorKey = key;\n            keys.currentKey = key;\n        }\n        if (this.disallowEmptySelection && keys.size === 0) return;\n        this.state.setSelectedKeys(keys);\n    }\n    /**\n   * Replaces the selection with only the given key.\n   */ replaceSelection(key) {\n        if (this.selectionMode === \"none\") return;\n        key = this.getKey(key);\n        if (key == null) return;\n        let selection = this.canSelectItem(key) ? new (0, $e40ea825a81a3709$export$52baac22726c72bf)([\n            key\n        ], key, key) : new (0, $e40ea825a81a3709$export$52baac22726c72bf)();\n        this.state.setSelectedKeys(selection);\n    }\n    /**\n   * Replaces the selection with the given keys.\n   */ setSelectedKeys(keys) {\n        if (this.selectionMode === \"none\") return;\n        let selection = new (0, $e40ea825a81a3709$export$52baac22726c72bf)();\n        for (let key of keys){\n            key = this.getKey(key);\n            if (key != null) {\n                selection.add(key);\n                if (this.selectionMode === \"single\") break;\n            }\n        }\n        this.state.setSelectedKeys(selection);\n    }\n    getSelectAllKeys() {\n        let keys = [];\n        let addKeys = (key)=>{\n            while(key){\n                if (this.canSelectItem(key)) {\n                    let item = this.collection.getItem(key);\n                    if (item.type === \"item\") keys.push(key);\n                    // Add child keys. If cell selection is allowed, then include item children too.\n                    if (item.hasChildNodes && (this.allowsCellSelection || item.type !== \"item\")) addKeys((0, $jkhUT$getFirstItem)((0, $jkhUT$getChildNodes)(item, this.collection)).key);\n                }\n                key = this.collection.getKeyAfter(key);\n            }\n        };\n        addKeys(this.collection.getFirstKey());\n        return keys;\n    }\n    /**\n   * Selects all items in the collection.\n   */ selectAll() {\n        if (!this.isSelectAll && this.selectionMode === \"multiple\") this.state.setSelectedKeys(\"all\");\n    }\n    /**\n   * Removes all keys from the selection.\n   */ clearSelection() {\n        if (!this.disallowEmptySelection && (this.state.selectedKeys === \"all\" || this.state.selectedKeys.size > 0)) this.state.setSelectedKeys(new (0, $e40ea825a81a3709$export$52baac22726c72bf)());\n    }\n    /**\n   * Toggles between select all and an empty selection.\n   */ toggleSelectAll() {\n        if (this.isSelectAll) this.clearSelection();\n        else this.selectAll();\n    }\n    select(key, e) {\n        if (this.selectionMode === \"none\") return;\n        if (this.selectionMode === \"single\") {\n            if (this.isSelected(key) && !this.disallowEmptySelection) this.toggleSelection(key);\n            else this.replaceSelection(key);\n        } else if (this.selectionBehavior === \"toggle\" || e && (e.pointerType === \"touch\" || e.pointerType === \"virtual\")) // if touch or virtual (VO) then we just want to toggle, otherwise it's impossible to multi select because they don't have modifier keys\n        this.toggleSelection(key);\n        else this.replaceSelection(key);\n    }\n    /**\n   * Returns whether the current selection is equal to the given selection.\n   */ isSelectionEqual(selection) {\n        if (selection === this.state.selectedKeys) return true;\n        // Check if the set of keys match.\n        let selectedKeys = this.selectedKeys;\n        if (selection.size !== selectedKeys.size) return false;\n        for (let key of selection){\n            if (!selectedKeys.has(key)) return false;\n        }\n        for (let key of selectedKeys){\n            if (!selection.has(key)) return false;\n        }\n        return true;\n    }\n    canSelectItem(key) {\n        var _item_props;\n        if (this.state.selectionMode === \"none\" || this.state.disabledKeys.has(key)) return false;\n        let item = this.collection.getItem(key);\n        if (!item || (item === null || item === void 0 ? void 0 : (_item_props = item.props) === null || _item_props === void 0 ? void 0 : _item_props.isDisabled) || item.type === \"cell\" && !this.allowsCellSelection) return false;\n        return true;\n    }\n    isDisabled(key) {\n        var _this_collection_getItem_props, _this_collection_getItem;\n        return this.state.disabledBehavior === \"all\" && (this.state.disabledKeys.has(key) || !!((_this_collection_getItem = this.collection.getItem(key)) === null || _this_collection_getItem === void 0 ? void 0 : (_this_collection_getItem_props = _this_collection_getItem.props) === null || _this_collection_getItem_props === void 0 ? void 0 : _this_collection_getItem_props.isDisabled));\n    }\n    isLink(key) {\n        var _this_collection_getItem_props, _this_collection_getItem;\n        return !!((_this_collection_getItem = this.collection.getItem(key)) === null || _this_collection_getItem === void 0 ? void 0 : (_this_collection_getItem_props = _this_collection_getItem.props) === null || _this_collection_getItem_props === void 0 ? void 0 : _this_collection_getItem_props.href);\n    }\n    getItemProps(key) {\n        var _this_collection_getItem;\n        return (_this_collection_getItem = this.collection.getItem(key)) === null || _this_collection_getItem === void 0 ? void 0 : _this_collection_getItem.props;\n    }\n    constructor(collection, state, options){\n        this.collection = collection;\n        this.state = state;\n        var _options_allowsCellSelection;\n        this.allowsCellSelection = (_options_allowsCellSelection = options === null || options === void 0 ? void 0 : options.allowsCellSelection) !== null && _options_allowsCellSelection !== void 0 ? _options_allowsCellSelection : false;\n        this._isSelectAll = null;\n    }\n}\n\n\nexport {$d496c0a20b6e58ec$export$6c8a5aaad13c9852 as SelectionManager};\n//# sourceMappingURL=SelectionManager.mjs.map\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
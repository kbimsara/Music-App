{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport $czs6v$intlStringsmodulejs from \"./intlStrings.mjs\";\nimport { useId as $czs6v$useId } from \"@react-aria/utils\";\nimport { useLocalizedStringFormatter as $czs6v$useLocalizedStringFormatter } from \"@react-aria/i18n\";\nimport { useLongPress as $czs6v$useLongPress } from \"@react-aria/interactions\";\nimport { useOverlayTrigger as $czs6v$useOverlayTrigger } from \"@react-aria/overlays\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nfunction $168583247155ddda$export$dc9c12ed27dd1b49(props, state, ref) {\n  var _props$type = props.type,\n    type = _props$type === void 0 ? \"menu\" : _props$type,\n    isDisabled = props.isDisabled,\n    _props$trigger = props.trigger,\n    trigger = _props$trigger === void 0 ? \"press\" : _props$trigger;\n  var menuTriggerId = (0, $czs6v$useId)();\n  var _ref = (0, $czs6v$useOverlayTrigger)({\n      type: type\n    }, state, ref),\n    triggerProps = _ref.triggerProps,\n    overlayProps = _ref.overlayProps;\n  var onKeyDown = function onKeyDown(e) {\n    if (isDisabled) return;\n    if (trigger === \"longPress\" && !e.altKey) return;\n    if (ref && ref.current) switch (e.key) {\n      case \"Enter\":\n      case \" \":\n        if (trigger === \"longPress\") return;\n      case \"ArrowDown\":\n        if (!(\"continuePropagation\" in e)) e.stopPropagation();\n        e.preventDefault();\n        state.toggle(\"first\");\n        break;\n      case \"ArrowUp\":\n        if (!(\"continuePropagation\" in e)) e.stopPropagation();\n        e.preventDefault();\n        state.toggle(\"last\");\n        break;\n      default:\n        if (\"continuePropagation\" in e) e.continuePropagation();\n    }\n  };\n  var stringFormatter = (0, $czs6v$useLocalizedStringFormatter)((0, $parcel$interopDefault($czs6v$intlStringsmodulejs)), \"@react-aria/menu\");\n  var _ref2 = (0, $czs6v$useLongPress)({\n      isDisabled: isDisabled || trigger !== \"longPress\",\n      accessibilityDescription: stringFormatter.format(\"longPressMessage\"),\n      onLongPressStart: function onLongPressStart() {\n        state.close();\n      },\n      onLongPress: function onLongPress() {\n        state.open(\"first\");\n      }\n    }),\n    longPressProps = _ref2.longPressProps;\n  var pressProps = {\n    onPressStart: function onPressStart(e) {\n      if (e.pointerType !== \"touch\" && e.pointerType !== \"keyboard\" && !isDisabled) state.open(e.pointerType === \"virtual\" ? \"first\" : null);\n    },\n    onPress: function onPress(e) {\n      if (e.pointerType === \"touch\" && !isDisabled) state.toggle();\n    }\n  };\n  delete triggerProps.onPress;\n  return {\n    menuTriggerProps: _objectSpread(_objectSpread(_objectSpread({}, triggerProps), trigger === \"press\" ? pressProps : longPressProps), {}, {\n      id: menuTriggerId,\n      onKeyDown: onKeyDown\n    }),\n    menuProps: _objectSpread(_objectSpread({}, overlayProps), {}, {\n      \"aria-labelledby\": menuTriggerId,\n      autoFocus: state.focusStrategy || true,\n      onClose: state.close\n    })\n  };\n}\nexport { $168583247155ddda$export$dc9c12ed27dd1b49 as useMenuTrigger };","map":{"version":3,"names":["$czs6v$intlStringsmodulejs","useId","$czs6v$useId","useLocalizedStringFormatter","$czs6v$useLocalizedStringFormatter","useLongPress","$czs6v$useLongPress","useOverlayTrigger","$czs6v$useOverlayTrigger","$parcel$interopDefault","a","__esModule","default","$168583247155ddda$export$dc9c12ed27dd1b49","props","state","ref","_props$type","type","isDisabled","_props$trigger","trigger","menuTriggerId","_ref","triggerProps","overlayProps","onKeyDown","e","altKey","current","key","stopPropagation","preventDefault","toggle","continuePropagation","stringFormatter","_ref2","accessibilityDescription","format","onLongPressStart","close","onLongPress","open","longPressProps","pressProps","onPressStart","pointerType","onPress","menuTriggerProps","_objectSpread","id","menuProps","autoFocus","focusStrategy","onClose","useMenuTrigger"],"sources":["D:/React Native/Expo+glustack/Music-App/node_modules/@react-aria/menu/dist/useMenuTrigger.mjs"],"sourcesContent":["import $czs6v$intlStringsmodulejs from \"./intlStrings.mjs\";\nimport {useId as $czs6v$useId} from \"@react-aria/utils\";\nimport {useLocalizedStringFormatter as $czs6v$useLocalizedStringFormatter} from \"@react-aria/i18n\";\nimport {useLongPress as $czs6v$useLongPress} from \"@react-aria/interactions\";\nimport {useOverlayTrigger as $czs6v$useOverlayTrigger} from \"@react-aria/overlays\";\n\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\n\n\n\nfunction $168583247155ddda$export$dc9c12ed27dd1b49(props, state, ref) {\n    let { type: type = \"menu\", isDisabled: isDisabled, trigger: trigger = \"press\" } = props;\n    let menuTriggerId = (0, $czs6v$useId)();\n    let { triggerProps: triggerProps, overlayProps: overlayProps } = (0, $czs6v$useOverlayTrigger)({\n        type: type\n    }, state, ref);\n    let onKeyDown = (e)=>{\n        if (isDisabled) return;\n        if (trigger === \"longPress\" && !e.altKey) return;\n        if (ref && ref.current) switch(e.key){\n            case \"Enter\":\n            case \" \":\n                if (trigger === \"longPress\") return;\n            // fallthrough\n            case \"ArrowDown\":\n                // Stop propagation, unless it would already be handled by useKeyboard.\n                if (!(\"continuePropagation\" in e)) e.stopPropagation();\n                e.preventDefault();\n                state.toggle(\"first\");\n                break;\n            case \"ArrowUp\":\n                if (!(\"continuePropagation\" in e)) e.stopPropagation();\n                e.preventDefault();\n                state.toggle(\"last\");\n                break;\n            default:\n                // Allow other keys.\n                if (\"continuePropagation\" in e) e.continuePropagation();\n        }\n    };\n    let stringFormatter = (0, $czs6v$useLocalizedStringFormatter)((0, ($parcel$interopDefault($czs6v$intlStringsmodulejs))), \"@react-aria/menu\");\n    let { longPressProps: longPressProps } = (0, $czs6v$useLongPress)({\n        isDisabled: isDisabled || trigger !== \"longPress\",\n        accessibilityDescription: stringFormatter.format(\"longPressMessage\"),\n        onLongPressStart () {\n            state.close();\n        },\n        onLongPress () {\n            state.open(\"first\");\n        }\n    });\n    let pressProps = {\n        onPressStart (e) {\n            // For consistency with native, open the menu on mouse/key down, but touch up.\n            if (e.pointerType !== \"touch\" && e.pointerType !== \"keyboard\" && !isDisabled) // If opened with a screen reader, auto focus the first item.\n            // Otherwise, the menu itself will be focused.\n            state.open(e.pointerType === \"virtual\" ? \"first\" : null);\n        },\n        onPress (e) {\n            if (e.pointerType === \"touch\" && !isDisabled) state.toggle();\n        }\n    };\n    // omit onPress from triggerProps since we override it above.\n    delete triggerProps.onPress;\n    return {\n        menuTriggerProps: {\n            ...triggerProps,\n            ...trigger === \"press\" ? pressProps : longPressProps,\n            id: menuTriggerId,\n            onKeyDown: onKeyDown\n        },\n        menuProps: {\n            ...overlayProps,\n            \"aria-labelledby\": menuTriggerId,\n            autoFocus: state.focusStrategy || true,\n            onClose: state.close\n        }\n    };\n}\n\n\nexport {$168583247155ddda$export$dc9c12ed27dd1b49 as useMenuTrigger};\n//# sourceMappingURL=useMenuTrigger.mjs.map\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
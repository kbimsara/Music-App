{"ast":null,"code":"import { useRef as $dAE4Y$useRef } from \"react\";\nvar $fb3050f43d946246$var$TYPEAHEAD_DEBOUNCE_WAIT_MS = 1000;\nfunction $fb3050f43d946246$export$e32c88dfddc6e1d8(options) {\n  var keyboardDelegate = options.keyboardDelegate,\n    selectionManager = options.selectionManager,\n    onTypeSelect = options.onTypeSelect;\n  var state = (0, $dAE4Y$useRef)({\n    search: \"\",\n    timeout: null\n  }).current;\n  var onKeyDown = function onKeyDown(e) {\n    var character = $fb3050f43d946246$var$getStringForKey(e.key);\n    if (!character || e.ctrlKey || e.metaKey || !e.currentTarget.contains(e.target)) return;\n    if (character === \" \" && state.search.trim().length > 0) {\n      e.preventDefault();\n      if (!(\"continuePropagation\" in e)) e.stopPropagation();\n    }\n    state.search += character;\n    var key = keyboardDelegate.getKeyForSearch(state.search, selectionManager.focusedKey);\n    if (key == null) key = keyboardDelegate.getKeyForSearch(state.search);\n    if (key != null) {\n      selectionManager.setFocusedKey(key);\n      if (onTypeSelect) onTypeSelect(key);\n    }\n    clearTimeout(state.timeout);\n    state.timeout = setTimeout(function () {\n      state.search = \"\";\n    }, $fb3050f43d946246$var$TYPEAHEAD_DEBOUNCE_WAIT_MS);\n  };\n  return {\n    typeSelectProps: {\n      onKeyDownCapture: keyboardDelegate.getKeyForSearch ? onKeyDown : null\n    }\n  };\n}\nfunction $fb3050f43d946246$var$getStringForKey(key) {\n  if (key.length === 1 || !/^[A-Z]/i.test(key)) return key;\n  return \"\";\n}\nexport { $fb3050f43d946246$export$e32c88dfddc6e1d8 as useTypeSelect };","map":{"version":3,"names":["useRef","$dAE4Y$useRef","$fb3050f43d946246$var$TYPEAHEAD_DEBOUNCE_WAIT_MS","$fb3050f43d946246$export$e32c88dfddc6e1d8","options","keyboardDelegate","selectionManager","onTypeSelect","state","search","timeout","current","onKeyDown","e","character","$fb3050f43d946246$var$getStringForKey","key","ctrlKey","metaKey","currentTarget","contains","target","trim","length","preventDefault","stopPropagation","getKeyForSearch","focusedKey","setFocusedKey","clearTimeout","setTimeout","typeSelectProps","onKeyDownCapture","test","useTypeSelect"],"sources":["D:/React Native/Expo+glustack/Music-App/node_modules/@react-aria/selection/dist/useTypeSelect.mjs"],"sourcesContent":["import {useRef as $dAE4Y$useRef} from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n/**\n * Controls how long to wait before clearing the typeahead buffer.\n */ const $fb3050f43d946246$var$TYPEAHEAD_DEBOUNCE_WAIT_MS = 1000; // 1 second\nfunction $fb3050f43d946246$export$e32c88dfddc6e1d8(options) {\n    let { keyboardDelegate: keyboardDelegate, selectionManager: selectionManager, onTypeSelect: onTypeSelect } = options;\n    let state = (0, $dAE4Y$useRef)({\n        search: \"\",\n        timeout: null\n    }).current;\n    let onKeyDown = (e)=>{\n        let character = $fb3050f43d946246$var$getStringForKey(e.key);\n        if (!character || e.ctrlKey || e.metaKey || !e.currentTarget.contains(e.target)) return;\n        // Do not propagate the Spacebar event if it's meant to be part of the search.\n        // When we time out, the search term becomes empty, hence the check on length.\n        // Trimming is to account for the case of pressing the Spacebar more than once,\n        // which should cycle through the selection/deselection of the focused item.\n        if (character === \" \" && state.search.trim().length > 0) {\n            e.preventDefault();\n            if (!(\"continuePropagation\" in e)) e.stopPropagation();\n        }\n        state.search += character;\n        // Use the delegate to find a key to focus.\n        // Prioritize items after the currently focused item, falling back to searching the whole list.\n        let key = keyboardDelegate.getKeyForSearch(state.search, selectionManager.focusedKey);\n        // If no key found, search from the top.\n        if (key == null) key = keyboardDelegate.getKeyForSearch(state.search);\n        if (key != null) {\n            selectionManager.setFocusedKey(key);\n            if (onTypeSelect) onTypeSelect(key);\n        }\n        clearTimeout(state.timeout);\n        state.timeout = setTimeout(()=>{\n            state.search = \"\";\n        }, $fb3050f43d946246$var$TYPEAHEAD_DEBOUNCE_WAIT_MS);\n    };\n    return {\n        typeSelectProps: {\n            // Using a capturing listener to catch the keydown event before\n            // other hooks in order to handle the Spacebar event.\n            onKeyDownCapture: keyboardDelegate.getKeyForSearch ? onKeyDown : null\n        }\n    };\n}\nfunction $fb3050f43d946246$var$getStringForKey(key) {\n    // If the key is of length 1, it is an ASCII value.\n    // Otherwise, if there are no ASCII characters in the key name,\n    // it is a Unicode character.\n    // See https://www.w3.org/TR/uievents-key/\n    if (key.length === 1 || !/^[A-Z]/i.test(key)) return key;\n    return \"\";\n}\n\n\nexport {$fb3050f43d946246$export$e32c88dfddc6e1d8 as useTypeSelect};\n//# sourceMappingURL=useTypeSelect.mjs.map\n"],"mappings":"AAAA,SAAQA,MAAM,IAAIC,aAAa,QAAO,OAAO;AAezC,IAAMC,gDAAgD,GAAG,IAAI;AACjE,SAASC,yCAAyCA,CAACC,OAAO,EAAE;EACxD,IAAwBC,gBAAgB,GAAqED,OAAO,CAA9GC,gBAAgB;IAAsCC,gBAAgB,GAAiCF,OAAO,CAA1EE,gBAAgB;IAAkCC,YAAY,GAAKH,OAAO,CAAtCG,YAAY;EAC1F,IAAIC,KAAK,GAAG,CAAC,CAAC,EAAEP,aAAa,EAAE;IAC3BQ,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE;EACb,CAAC,CAAC,CAACC,OAAO;EACV,IAAIC,SAAS,GAAG,SAAZA,SAASA,CAAIC,CAAC,EAAG;IACjB,IAAIC,SAAS,GAAGC,qCAAqC,CAACF,CAAC,CAACG,GAAG,CAAC;IAC5D,IAAI,CAACF,SAAS,IAAID,CAAC,CAACI,OAAO,IAAIJ,CAAC,CAACK,OAAO,IAAI,CAACL,CAAC,CAACM,aAAa,CAACC,QAAQ,CAACP,CAAC,CAACQ,MAAM,CAAC,EAAE;IAKjF,IAAIP,SAAS,KAAK,GAAG,IAAIN,KAAK,CAACC,MAAM,CAACa,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,EAAE;MACrDV,CAAC,CAACW,cAAc,CAAC,CAAC;MAClB,IAAI,EAAE,qBAAqB,IAAIX,CAAC,CAAC,EAAEA,CAAC,CAACY,eAAe,CAAC,CAAC;IAC1D;IACAjB,KAAK,CAACC,MAAM,IAAIK,SAAS;IAGzB,IAAIE,GAAG,GAAGX,gBAAgB,CAACqB,eAAe,CAAClB,KAAK,CAACC,MAAM,EAAEH,gBAAgB,CAACqB,UAAU,CAAC;IAErF,IAAIX,GAAG,IAAI,IAAI,EAAEA,GAAG,GAAGX,gBAAgB,CAACqB,eAAe,CAAClB,KAAK,CAACC,MAAM,CAAC;IACrE,IAAIO,GAAG,IAAI,IAAI,EAAE;MACbV,gBAAgB,CAACsB,aAAa,CAACZ,GAAG,CAAC;MACnC,IAAIT,YAAY,EAAEA,YAAY,CAACS,GAAG,CAAC;IACvC;IACAa,YAAY,CAACrB,KAAK,CAACE,OAAO,CAAC;IAC3BF,KAAK,CAACE,OAAO,GAAGoB,UAAU,CAAC,YAAI;MAC3BtB,KAAK,CAACC,MAAM,GAAG,EAAE;IACrB,CAAC,EAAEP,gDAAgD,CAAC;EACxD,CAAC;EACD,OAAO;IACH6B,eAAe,EAAE;MAGbC,gBAAgB,EAAE3B,gBAAgB,CAACqB,eAAe,GAAGd,SAAS,GAAG;IACrE;EACJ,CAAC;AACL;AACA,SAASG,qCAAqCA,CAACC,GAAG,EAAE;EAKhD,IAAIA,GAAG,CAACO,MAAM,KAAK,CAAC,IAAI,CAAC,SAAS,CAACU,IAAI,CAACjB,GAAG,CAAC,EAAE,OAAOA,GAAG;EACxD,OAAO,EAAE;AACb;AAGA,SAAQb,yCAAyC,IAAI+B,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
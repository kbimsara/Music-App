{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { TableColumnLayout as $a9e7ae544a4e41dd$export$7ff77a162970b30e } from \"./TableColumnLayout.mjs\";\nimport { useState as $cPT3l$useState, useMemo as $cPT3l$useMemo, useCallback as $cPT3l$useCallback } from \"react\";\nfunction $292bc4e09cd0eb62$export$cb895dcf85db1319(props, state) {\n  var getDefaultWidth = props.getDefaultWidth,\n    getDefaultMinWidth = props.getDefaultMinWidth,\n    _props$tableWidth = props.tableWidth,\n    tableWidth = _props$tableWidth === void 0 ? 0 : _props$tableWidth;\n  var _ref = (0, $cPT3l$useState)(null),\n    _ref2 = _slicedToArray(_ref, 2),\n    resizingColumn = _ref2[0],\n    setResizingColumn = _ref2[1];\n  var columnLayout = (0, $cPT3l$useMemo)(function () {\n    return new (0, $a9e7ae544a4e41dd$export$7ff77a162970b30e)({\n      getDefaultWidth: getDefaultWidth,\n      getDefaultMinWidth: getDefaultMinWidth\n    });\n  }, [getDefaultWidth, getDefaultMinWidth]);\n  var _ref3 = (0, $cPT3l$useMemo)(function () {\n      return columnLayout.splitColumnsIntoControlledAndUncontrolled(state.collection.columns);\n    }, [state.collection.columns, columnLayout]),\n    _ref4 = _slicedToArray(_ref3, 2),\n    controlledColumns = _ref4[0],\n    uncontrolledColumns = _ref4[1];\n  var _ref5 = (0, $cPT3l$useState)(function () {\n      return columnLayout.getInitialUncontrolledWidths(uncontrolledColumns);\n    }),\n    _ref6 = _slicedToArray(_ref5, 2),\n    uncontrolledWidths = _ref6[0],\n    setUncontrolledWidths = _ref6[1];\n  var _ref7 = (0, $cPT3l$useState)(state.collection.columns),\n    _ref8 = _slicedToArray(_ref7, 2),\n    lastColumns = _ref8[0],\n    setLastColumns = _ref8[1];\n  if (state.collection.columns !== lastColumns) {\n    if (state.collection.columns.length !== lastColumns.length || state.collection.columns.some(function (c, i) {\n      return c.key !== lastColumns[i].key;\n    })) {\n      var newUncontrolledWidths = columnLayout.getInitialUncontrolledWidths(uncontrolledColumns);\n      setUncontrolledWidths(newUncontrolledWidths);\n    }\n    setLastColumns(state.collection.columns);\n  }\n  var colWidths = (0, $cPT3l$useMemo)(function () {\n    return columnLayout.recombineColumns(state.collection.columns, uncontrolledWidths, uncontrolledColumns, controlledColumns);\n  }, [state.collection.columns, uncontrolledWidths, uncontrolledColumns, controlledColumns, columnLayout]);\n  var startResize = (0, $cPT3l$useCallback)(function (key) {\n    setResizingColumn(key);\n  }, [setResizingColumn]);\n  var updateResizedColumns = (0, $cPT3l$useCallback)(function (key, width) {\n    var newControlled = new Map(Array.from(controlledColumns).map(function (_ref9) {\n      var _ref10 = _slicedToArray(_ref9, 2),\n        key = _ref10[0],\n        entry = _ref10[1];\n      return [key, entry.props.width];\n    }));\n    var newSizes = columnLayout.resizeColumnWidth(tableWidth, state.collection, newControlled, uncontrolledWidths, key, width);\n    var map = new Map(Array.from(uncontrolledColumns).map(function (_ref11) {\n      var _ref12 = _slicedToArray(_ref11, 1),\n        key = _ref12[0];\n      return [key, newSizes.get(key)];\n    }));\n    map.set(key, width);\n    setUncontrolledWidths(map);\n    return newSizes;\n  }, [controlledColumns, uncontrolledColumns, setUncontrolledWidths, tableWidth, columnLayout, state.collection, uncontrolledWidths]);\n  var endResize = (0, $cPT3l$useCallback)(function () {\n    setResizingColumn(null);\n  }, [setResizingColumn]);\n  (0, $cPT3l$useMemo)(function () {\n    return columnLayout.buildColumnWidths(tableWidth, state.collection, colWidths);\n  }, [tableWidth, state.collection, colWidths, columnLayout]);\n  return (0, $cPT3l$useMemo)(function () {\n    return {\n      resizingColumn: resizingColumn,\n      updateResizedColumns: updateResizedColumns,\n      startResize: startResize,\n      endResize: endResize,\n      getColumnWidth: function getColumnWidth(key) {\n        return columnLayout.getColumnWidth(key);\n      },\n      getColumnMinWidth: function getColumnMinWidth(key) {\n        return columnLayout.getColumnMinWidth(key);\n      },\n      getColumnMaxWidth: function getColumnMaxWidth(key) {\n        return columnLayout.getColumnMaxWidth(key);\n      },\n      tableState: state\n    };\n  }, [columnLayout, resizingColumn, updateResizedColumns, startResize, endResize, state]);\n}\nexport { $292bc4e09cd0eb62$export$cb895dcf85db1319 as useTableColumnResizeState };","map":{"version":3,"names":["TableColumnLayout","$a9e7ae544a4e41dd$export$7ff77a162970b30e","useState","$cPT3l$useState","useMemo","$cPT3l$useMemo","useCallback","$cPT3l$useCallback","$292bc4e09cd0eb62$export$cb895dcf85db1319","props","state","getDefaultWidth","getDefaultMinWidth","_props$tableWidth","tableWidth","_ref","_ref2","_slicedToArray","resizingColumn","setResizingColumn","columnLayout","_ref3","splitColumnsIntoControlledAndUncontrolled","collection","columns","_ref4","controlledColumns","uncontrolledColumns","_ref5","getInitialUncontrolledWidths","_ref6","uncontrolledWidths","setUncontrolledWidths","_ref7","_ref8","lastColumns","setLastColumns","length","some","c","i","key","newUncontrolledWidths","colWidths","recombineColumns","startResize","updateResizedColumns","width","newControlled","Map","Array","from","map","_ref9","_ref10","entry","newSizes","resizeColumnWidth","_ref11","_ref12","get","set","endResize","buildColumnWidths","getColumnWidth","getColumnMinWidth","getColumnMaxWidth","tableState","useTableColumnResizeState"],"sources":["D:/React Native/Expo+glustack/Music-App/node_modules/@react-stately/table/dist/useTableColumnResizeState.mjs"],"sourcesContent":["import {TableColumnLayout as $a9e7ae544a4e41dd$export$7ff77a162970b30e} from \"./TableColumnLayout.mjs\";\nimport {useState as $cPT3l$useState, useMemo as $cPT3l$useMemo, useCallback as $cPT3l$useCallback} from \"react\";\n\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\nfunction $292bc4e09cd0eb62$export$cb895dcf85db1319(props, state) {\n    let { getDefaultWidth: getDefaultWidth, getDefaultMinWidth: getDefaultMinWidth, tableWidth: tableWidth = 0 } = props;\n    let [resizingColumn, setResizingColumn] = (0, $cPT3l$useState)(null);\n    let columnLayout = (0, $cPT3l$useMemo)(()=>new (0, $a9e7ae544a4e41dd$export$7ff77a162970b30e)({\n            getDefaultWidth: getDefaultWidth,\n            getDefaultMinWidth: getDefaultMinWidth\n        }), [\n        getDefaultWidth,\n        getDefaultMinWidth\n    ]);\n    let [controlledColumns, uncontrolledColumns] = (0, $cPT3l$useMemo)(()=>columnLayout.splitColumnsIntoControlledAndUncontrolled(state.collection.columns), [\n        state.collection.columns,\n        columnLayout\n    ]);\n    // uncontrolled column widths\n    let [uncontrolledWidths, setUncontrolledWidths] = (0, $cPT3l$useState)(()=>columnLayout.getInitialUncontrolledWidths(uncontrolledColumns));\n    // Update uncontrolled widths if the columns changed.\n    let [lastColumns, setLastColumns] = (0, $cPT3l$useState)(state.collection.columns);\n    if (state.collection.columns !== lastColumns) {\n        if (state.collection.columns.length !== lastColumns.length || state.collection.columns.some((c, i)=>c.key !== lastColumns[i].key)) {\n            let newUncontrolledWidths = columnLayout.getInitialUncontrolledWidths(uncontrolledColumns);\n            setUncontrolledWidths(newUncontrolledWidths);\n        }\n        setLastColumns(state.collection.columns);\n    }\n    // combine columns back into one map that maintains same order as the columns\n    let colWidths = (0, $cPT3l$useMemo)(()=>columnLayout.recombineColumns(state.collection.columns, uncontrolledWidths, uncontrolledColumns, controlledColumns), [\n        state.collection.columns,\n        uncontrolledWidths,\n        uncontrolledColumns,\n        controlledColumns,\n        columnLayout\n    ]);\n    let startResize = (0, $cPT3l$useCallback)((key)=>{\n        setResizingColumn(key);\n    }, [\n        setResizingColumn\n    ]);\n    let updateResizedColumns = (0, $cPT3l$useCallback)((key, width)=>{\n        let newControlled = new Map(Array.from(controlledColumns).map(([key, entry])=>[\n                key,\n                entry.props.width\n            ]));\n        let newSizes = columnLayout.resizeColumnWidth(tableWidth, state.collection, newControlled, uncontrolledWidths, key, width);\n        let map = new Map(Array.from(uncontrolledColumns).map(([key])=>[\n                key,\n                newSizes.get(key)\n            ]));\n        map.set(key, width);\n        setUncontrolledWidths(map);\n        return newSizes;\n    }, [\n        controlledColumns,\n        uncontrolledColumns,\n        setUncontrolledWidths,\n        tableWidth,\n        columnLayout,\n        state.collection,\n        uncontrolledWidths\n    ]);\n    let endResize = (0, $cPT3l$useCallback)(()=>{\n        setResizingColumn(null);\n    }, [\n        setResizingColumn\n    ]);\n    (0, $cPT3l$useMemo)(()=>columnLayout.buildColumnWidths(tableWidth, state.collection, colWidths), [\n        tableWidth,\n        state.collection,\n        colWidths,\n        columnLayout\n    ]);\n    return (0, $cPT3l$useMemo)(()=>({\n            resizingColumn: resizingColumn,\n            updateResizedColumns: updateResizedColumns,\n            startResize: startResize,\n            endResize: endResize,\n            getColumnWidth: (key)=>columnLayout.getColumnWidth(key),\n            getColumnMinWidth: (key)=>columnLayout.getColumnMinWidth(key),\n            getColumnMaxWidth: (key)=>columnLayout.getColumnMaxWidth(key),\n            tableState: state\n        }), [\n        columnLayout,\n        resizingColumn,\n        updateResizedColumns,\n        startResize,\n        endResize,\n        state\n    ]);\n}\n\n\nexport {$292bc4e09cd0eb62$export$cb895dcf85db1319 as useTableColumnResizeState};\n//# sourceMappingURL=useTableColumnResizeState.mjs.map\n"],"mappings":";AAAA,SAAQA,iBAAiB,IAAIC,yCAAyC,QAAO,yBAAyB;AACtG,SAAQC,QAAQ,IAAIC,eAAe,EAAEC,OAAO,IAAIC,cAAc,EAAEC,WAAW,IAAIC,kBAAkB,QAAO,OAAO;AAc/G,SAASC,yCAAyCA,CAACC,KAAK,EAAEC,KAAK,EAAE;EAC7D,IAAuBC,eAAe,GAAyEF,KAAK,CAA9GE,eAAe;IAAuCC,kBAAkB,GAAiCH,KAAK,CAA5EG,kBAAkB;IAAAC,iBAAA,GAAqDJ,KAAK,CAApCK,UAAU;IAAEA,UAAU,GAAAD,iBAAA,cAAG,CAAC,GAAAA,iBAAA;EAC1G,IAAAE,IAAA,GAA0C,CAAC,CAAC,EAAEZ,eAAe,EAAE,IAAI,CAAC;IAAAa,KAAA,GAAAC,cAAA,CAAAF,IAAA;IAA/DG,cAAc,GAAAF,KAAA;IAAEG,iBAAiB,GAAAH,KAAA;EACtC,IAAII,YAAY,GAAG,CAAC,CAAC,EAAEf,cAAc,EAAE;IAAA,OAAI,KAAK,CAAC,EAAEJ,yCAAyC,EAAE;MACtFU,eAAe,EAAEA,eAAe;MAChCC,kBAAkB,EAAEA;IACxB,CAAC,CAAC;EAAA,GAAE,CACJD,eAAe,EACfC,kBAAkB,CACrB,CAAC;EACF,IAAAS,KAAA,GAA+C,CAAC,CAAC,EAAEhB,cAAc,EAAE;MAAA,OAAIe,YAAY,CAACE,yCAAyC,CAACZ,KAAK,CAACa,UAAU,CAACC,OAAO,CAAC;IAAA,GAAE,CACrJd,KAAK,CAACa,UAAU,CAACC,OAAO,EACxBJ,YAAY,CACf,CAAC;IAAAK,KAAA,GAAAR,cAAA,CAAAI,KAAA;IAHGK,iBAAiB,GAAAD,KAAA;IAAEE,mBAAmB,GAAAF,KAAA;EAK3C,IAAAG,KAAA,GAAkD,CAAC,CAAC,EAAEzB,eAAe,EAAE;MAAA,OAAIiB,YAAY,CAACS,4BAA4B,CAACF,mBAAmB,CAAC;IAAA,EAAC;IAAAG,KAAA,GAAAb,cAAA,CAAAW,KAAA;IAArIG,kBAAkB,GAAAD,KAAA;IAAEE,qBAAqB,GAAAF,KAAA;EAE9C,IAAAG,KAAA,GAAoC,CAAC,CAAC,EAAE9B,eAAe,EAAEO,KAAK,CAACa,UAAU,CAACC,OAAO,CAAC;IAAAU,KAAA,GAAAjB,cAAA,CAAAgB,KAAA;IAA7EE,WAAW,GAAAD,KAAA;IAAEE,cAAc,GAAAF,KAAA;EAChC,IAAIxB,KAAK,CAACa,UAAU,CAACC,OAAO,KAAKW,WAAW,EAAE;IAC1C,IAAIzB,KAAK,CAACa,UAAU,CAACC,OAAO,CAACa,MAAM,KAAKF,WAAW,CAACE,MAAM,IAAI3B,KAAK,CAACa,UAAU,CAACC,OAAO,CAACc,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;MAAA,OAAGD,CAAC,CAACE,GAAG,KAAKN,WAAW,CAACK,CAAC,CAAC,CAACC,GAAG;IAAA,EAAC,EAAE;MAC/H,IAAIC,qBAAqB,GAAGtB,YAAY,CAACS,4BAA4B,CAACF,mBAAmB,CAAC;MAC1FK,qBAAqB,CAACU,qBAAqB,CAAC;IAChD;IACAN,cAAc,CAAC1B,KAAK,CAACa,UAAU,CAACC,OAAO,CAAC;EAC5C;EAEA,IAAImB,SAAS,GAAG,CAAC,CAAC,EAAEtC,cAAc,EAAE;IAAA,OAAIe,YAAY,CAACwB,gBAAgB,CAAClC,KAAK,CAACa,UAAU,CAACC,OAAO,EAAEO,kBAAkB,EAAEJ,mBAAmB,EAAED,iBAAiB,CAAC;EAAA,GAAE,CACzJhB,KAAK,CAACa,UAAU,CAACC,OAAO,EACxBO,kBAAkB,EAClBJ,mBAAmB,EACnBD,iBAAiB,EACjBN,YAAY,CACf,CAAC;EACF,IAAIyB,WAAW,GAAG,CAAC,CAAC,EAAEtC,kBAAkB,EAAE,UAACkC,GAAG,EAAG;IAC7CtB,iBAAiB,CAACsB,GAAG,CAAC;EAC1B,CAAC,EAAE,CACCtB,iBAAiB,CACpB,CAAC;EACF,IAAI2B,oBAAoB,GAAG,CAAC,CAAC,EAAEvC,kBAAkB,EAAE,UAACkC,GAAG,EAAEM,KAAK,EAAG;IAC7D,IAAIC,aAAa,GAAG,IAAIC,GAAG,CAACC,KAAK,CAACC,IAAI,CAACzB,iBAAiB,CAAC,CAAC0B,GAAG,CAAC,UAAAC,KAAA;MAAA,IAAAC,MAAA,GAAArC,cAAA,CAAAoC,KAAA;QAAEZ,GAAG,GAAAa,MAAA;QAAEC,KAAK,GAAAD,MAAA;MAAA,OAAI,CACtEb,GAAG,EACHc,KAAK,CAAC9C,KAAK,CAACsC,KAAK,CACpB;IAAA,EAAC,CAAC;IACP,IAAIS,QAAQ,GAAGpC,YAAY,CAACqC,iBAAiB,CAAC3C,UAAU,EAAEJ,KAAK,CAACa,UAAU,EAAEyB,aAAa,EAAEjB,kBAAkB,EAAEU,GAAG,EAAEM,KAAK,CAAC;IAC1H,IAAIK,GAAG,GAAG,IAAIH,GAAG,CAACC,KAAK,CAACC,IAAI,CAACxB,mBAAmB,CAAC,CAACyB,GAAG,CAAC,UAAAM,MAAA;MAAA,IAAAC,MAAA,GAAA1C,cAAA,CAAAyC,MAAA;QAAEjB,GAAG,GAAAkB,MAAA;MAAA,OAAI,CACvDlB,GAAG,EACHe,QAAQ,CAACI,GAAG,CAACnB,GAAG,CAAC,CACpB;IAAA,EAAC,CAAC;IACPW,GAAG,CAACS,GAAG,CAACpB,GAAG,EAAEM,KAAK,CAAC;IACnBf,qBAAqB,CAACoB,GAAG,CAAC;IAC1B,OAAOI,QAAQ;EACnB,CAAC,EAAE,CACC9B,iBAAiB,EACjBC,mBAAmB,EACnBK,qBAAqB,EACrBlB,UAAU,EACVM,YAAY,EACZV,KAAK,CAACa,UAAU,EAChBQ,kBAAkB,CACrB,CAAC;EACF,IAAI+B,SAAS,GAAG,CAAC,CAAC,EAAEvD,kBAAkB,EAAE,YAAI;IACxCY,iBAAiB,CAAC,IAAI,CAAC;EAC3B,CAAC,EAAE,CACCA,iBAAiB,CACpB,CAAC;EACF,CAAC,CAAC,EAAEd,cAAc,EAAE;IAAA,OAAIe,YAAY,CAAC2C,iBAAiB,CAACjD,UAAU,EAAEJ,KAAK,CAACa,UAAU,EAAEoB,SAAS,CAAC;EAAA,GAAE,CAC7F7B,UAAU,EACVJ,KAAK,CAACa,UAAU,EAChBoB,SAAS,EACTvB,YAAY,CACf,CAAC;EACF,OAAO,CAAC,CAAC,EAAEf,cAAc,EAAE;IAAA,OAAK;MACxBa,cAAc,EAAEA,cAAc;MAC9B4B,oBAAoB,EAAEA,oBAAoB;MAC1CD,WAAW,EAAEA,WAAW;MACxBiB,SAAS,EAAEA,SAAS;MACpBE,cAAc,EAAE,SAAAA,eAACvB,GAAG;QAAA,OAAGrB,YAAY,CAAC4C,cAAc,CAACvB,GAAG,CAAC;MAAA;MACvDwB,iBAAiB,EAAE,SAAAA,kBAACxB,GAAG;QAAA,OAAGrB,YAAY,CAAC6C,iBAAiB,CAACxB,GAAG,CAAC;MAAA;MAC7DyB,iBAAiB,EAAE,SAAAA,kBAACzB,GAAG;QAAA,OAAGrB,YAAY,CAAC8C,iBAAiB,CAACzB,GAAG,CAAC;MAAA;MAC7D0B,UAAU,EAAEzD;IAChB,CAAC;EAAA,CAAC,EAAE,CACJU,YAAY,EACZF,cAAc,EACd4B,oBAAoB,EACpBD,WAAW,EACXiB,SAAS,EACTpD,KAAK,CACR,CAAC;AACN;AAGA,SAAQF,yCAAyC,IAAI4D,yBAAyB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
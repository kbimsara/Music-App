{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useSingleSelectListState as $fgY1A$useSingleSelectListState } from \"@react-stately/list\";\nimport { useRef as $fgY1A$useRef, useEffect as $fgY1A$useEffect } from \"react\";\nfunction $76f919a04c5a7d14$export$4ba071daf4e486(props) {\n  var _props_defaultSelectedKey;\n  var state = (0, $fgY1A$useSingleSelectListState)(_objectSpread(_objectSpread({}, props), {}, {\n    suppressTextValueWarning: true,\n    defaultSelectedKey: (_props_defaultSelectedKey = props.defaultSelectedKey) !== null && _props_defaultSelectedKey !== void 0 ? _props_defaultSelectedKey : $76f919a04c5a7d14$var$findDefaultSelectedKey(props.collection, props.disabledKeys ? new Set(props.disabledKeys) : new Set())\n  }));\n  var selectionManager = state.selectionManager,\n    collection = state.collection,\n    currentSelectedKey = state.selectedKey;\n  var lastSelectedKey = (0, $fgY1A$useRef)(currentSelectedKey);\n  (0, $fgY1A$useEffect)(function () {\n    var selectedKey = currentSelectedKey;\n    if (selectionManager.isEmpty || !collection.getItem(selectedKey)) {\n      selectedKey = $76f919a04c5a7d14$var$findDefaultSelectedKey(collection, state.disabledKeys);\n      if (selectedKey != null) selectionManager.setSelectedKeys([selectedKey]);\n    }\n    if (selectedKey != null && selectionManager.focusedKey == null || !selectionManager.isFocused && selectedKey !== lastSelectedKey.current) selectionManager.setFocusedKey(selectedKey);\n    lastSelectedKey.current = selectedKey;\n  });\n  return _objectSpread(_objectSpread({}, state), {}, {\n    isDisabled: props.isDisabled || false\n  });\n}\nfunction $76f919a04c5a7d14$var$findDefaultSelectedKey(collection, disabledKeys) {\n  var selectedKey = null;\n  if (collection) {\n    selectedKey = collection.getFirstKey();\n    while (disabledKeys.has(selectedKey) && selectedKey !== collection.getLastKey()) selectedKey = collection.getKeyAfter(selectedKey);\n    if (disabledKeys.has(selectedKey) && selectedKey === collection.getLastKey()) selectedKey = collection.getFirstKey();\n  }\n  return selectedKey;\n}\nexport { $76f919a04c5a7d14$export$4ba071daf4e486 as useTabListState };","map":{"version":3,"names":["useSingleSelectListState","$fgY1A$useSingleSelectListState","useRef","$fgY1A$useRef","useEffect","$fgY1A$useEffect","$76f919a04c5a7d14$export$4ba071daf4e486","props","_props_defaultSelectedKey","state","_objectSpread","suppressTextValueWarning","defaultSelectedKey","$76f919a04c5a7d14$var$findDefaultSelectedKey","collection","disabledKeys","Set","selectionManager","currentSelectedKey","selectedKey","lastSelectedKey","isEmpty","getItem","setSelectedKeys","focusedKey","isFocused","current","setFocusedKey","isDisabled","getFirstKey","has","getLastKey","getKeyAfter","useTabListState"],"sources":["D:/React Native/Expo+glustack/Music-App/node_modules/@react-stately/tabs/dist/useTabListState.mjs"],"sourcesContent":["import {useSingleSelectListState as $fgY1A$useSingleSelectListState} from \"@react-stately/list\";\nimport {useRef as $fgY1A$useRef, useEffect as $fgY1A$useEffect} from \"react\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ \n\nfunction $76f919a04c5a7d14$export$4ba071daf4e486(props) {\n    var _props_defaultSelectedKey;\n    let state = (0, $fgY1A$useSingleSelectListState)({\n        ...props,\n        suppressTextValueWarning: true,\n        defaultSelectedKey: (_props_defaultSelectedKey = props.defaultSelectedKey) !== null && _props_defaultSelectedKey !== void 0 ? _props_defaultSelectedKey : $76f919a04c5a7d14$var$findDefaultSelectedKey(props.collection, props.disabledKeys ? new Set(props.disabledKeys) : new Set())\n    });\n    let { selectionManager: selectionManager, collection: collection, selectedKey: currentSelectedKey } = state;\n    let lastSelectedKey = (0, $fgY1A$useRef)(currentSelectedKey);\n    (0, $fgY1A$useEffect)(()=>{\n        // Ensure a tab is always selected (in case no selected key was specified or if selected item was deleted from collection)\n        let selectedKey = currentSelectedKey;\n        if (selectionManager.isEmpty || !collection.getItem(selectedKey)) {\n            selectedKey = $76f919a04c5a7d14$var$findDefaultSelectedKey(collection, state.disabledKeys);\n            if (selectedKey != null) // directly set selection because replace/toggle selection won't consider disabled keys\n            selectionManager.setSelectedKeys([\n                selectedKey\n            ]);\n        }\n        // If the tablist doesn't have focus and the selected key changes or if there isn't a focused key yet, change focused key to the selected key if it exists.\n        if (selectedKey != null && selectionManager.focusedKey == null || !selectionManager.isFocused && selectedKey !== lastSelectedKey.current) selectionManager.setFocusedKey(selectedKey);\n        lastSelectedKey.current = selectedKey;\n    });\n    return {\n        ...state,\n        isDisabled: props.isDisabled || false\n    };\n}\nfunction $76f919a04c5a7d14$var$findDefaultSelectedKey(collection, disabledKeys) {\n    let selectedKey = null;\n    if (collection) {\n        selectedKey = collection.getFirstKey();\n        // loop over tabs until we find one that isn't disabled and select that\n        while(disabledKeys.has(selectedKey) && selectedKey !== collection.getLastKey())selectedKey = collection.getKeyAfter(selectedKey);\n        // if this check is true, then every item is disabled, it makes more sense to default to the first key than the last\n        if (disabledKeys.has(selectedKey) && selectedKey === collection.getLastKey()) selectedKey = collection.getFirstKey();\n    }\n    return selectedKey;\n}\n\n\nexport {$76f919a04c5a7d14$export$4ba071daf4e486 as useTabListState};\n//# sourceMappingURL=useTabListState.mjs.map\n"],"mappings":";;;AAAA,SAAQA,wBAAwB,IAAIC,+BAA+B,QAAO,qBAAqB;AAC/F,SAAQC,MAAM,IAAIC,aAAa,EAAEC,SAAS,IAAIC,gBAAgB,QAAO,OAAO;AAc5E,SAASC,uCAAuCA,CAACC,KAAK,EAAE;EACpD,IAAIC,yBAAyB;EAC7B,IAAIC,KAAK,GAAG,CAAC,CAAC,EAAER,+BAA+B,EAAAS,aAAA,CAAAA,aAAA,KACxCH,KAAK;IACRI,wBAAwB,EAAE,IAAI;IAC9BC,kBAAkB,EAAE,CAACJ,yBAAyB,GAAGD,KAAK,CAACK,kBAAkB,MAAM,IAAI,IAAIJ,yBAAyB,KAAK,KAAK,CAAC,GAAGA,yBAAyB,GAAGK,4CAA4C,CAACN,KAAK,CAACO,UAAU,EAAEP,KAAK,CAACQ,YAAY,GAAG,IAAIC,GAAG,CAACT,KAAK,CAACQ,YAAY,CAAC,GAAG,IAAIC,GAAG,CAAC,CAAC;EAAC,EACzR,CAAC;EACF,IAAwBC,gBAAgB,GAA8DR,KAAK,CAArGQ,gBAAgB;IAAgCH,UAAU,GAAsCL,KAAK,CAAjEK,UAAU;IAA2BI,kBAAkB,GAAKT,KAAK,CAAzCU,WAAW;EAC7E,IAAIC,eAAe,GAAG,CAAC,CAAC,EAAEjB,aAAa,EAAEe,kBAAkB,CAAC;EAC5D,CAAC,CAAC,EAAEb,gBAAgB,EAAE,YAAI;IAEtB,IAAIc,WAAW,GAAGD,kBAAkB;IACpC,IAAID,gBAAgB,CAACI,OAAO,IAAI,CAACP,UAAU,CAACQ,OAAO,CAACH,WAAW,CAAC,EAAE;MAC9DA,WAAW,GAAGN,4CAA4C,CAACC,UAAU,EAAEL,KAAK,CAACM,YAAY,CAAC;MAC1F,IAAII,WAAW,IAAI,IAAI,EACvBF,gBAAgB,CAACM,eAAe,CAAC,CAC7BJ,WAAW,CACd,CAAC;IACN;IAEA,IAAIA,WAAW,IAAI,IAAI,IAAIF,gBAAgB,CAACO,UAAU,IAAI,IAAI,IAAI,CAACP,gBAAgB,CAACQ,SAAS,IAAIN,WAAW,KAAKC,eAAe,CAACM,OAAO,EAAET,gBAAgB,CAACU,aAAa,CAACR,WAAW,CAAC;IACrLC,eAAe,CAACM,OAAO,GAAGP,WAAW;EACzC,CAAC,CAAC;EACF,OAAAT,aAAA,CAAAA,aAAA,KACOD,KAAK;IACRmB,UAAU,EAAErB,KAAK,CAACqB,UAAU,IAAI;EAAK;AAE7C;AACA,SAASf,4CAA4CA,CAACC,UAAU,EAAEC,YAAY,EAAE;EAC5E,IAAII,WAAW,GAAG,IAAI;EACtB,IAAIL,UAAU,EAAE;IACZK,WAAW,GAAGL,UAAU,CAACe,WAAW,CAAC,CAAC;IAEtC,OAAMd,YAAY,CAACe,GAAG,CAACX,WAAW,CAAC,IAAIA,WAAW,KAAKL,UAAU,CAACiB,UAAU,CAAC,CAAC,EAACZ,WAAW,GAAGL,UAAU,CAACkB,WAAW,CAACb,WAAW,CAAC;IAEhI,IAAIJ,YAAY,CAACe,GAAG,CAACX,WAAW,CAAC,IAAIA,WAAW,KAAKL,UAAU,CAACiB,UAAU,CAAC,CAAC,EAAEZ,WAAW,GAAGL,UAAU,CAACe,WAAW,CAAC,CAAC;EACxH;EACA,OAAOV,WAAW;AACtB;AAGA,SAAQb,uCAAuC,IAAI2B,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}